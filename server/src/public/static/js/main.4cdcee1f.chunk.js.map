{"version":3,"sources":["lib/circles/DefaultCircle.jsx","lib/circles/DotCircle.jsx","lib/circles/HollowCircle.jsx","lib/circles/RingCircle.jsx","lib/circles/StrokeCircle.jsx","utils/circleUtilities.js","utils/createHeaderIcons.js","utils/debounce.js","utils/api.js","utils/responseSchema.js","components/Landing/Landing.jsx","lib/buttons/NextButton.jsx","lib/buttons/PreviousButton.jsx","lib/buttons/ResetButton.jsx","lib/buttons/StartButton.jsx","components/DisplayResults/DisplayResults.jsx","components/FormSwitch/FormSwitch.jsx","components/PanelButtonRow/PanelButtonRow.jsx","components/FormDisplay/NextForm.jsx","components/FormHeading/FormHeading.jsx","lib/instructions.js","components/FormDisplay/FormDisplay.jsx","redux/types.js","redux/actions/gameActions.js","socket.io/emitters.js","components/FormContainer/FormContainer.jsx","components/Panel/Panel.jsx","components/PolarGrid/PolarGrid.jsx","components/CircleDisplay/CircleDisplay.jsx","components/Canvas/components/DisplaySvg.jsx","components/Canvas/Canvas.jsx","App.jsx","redux/reducers/index.js","redux/reducers/gameReducer.js","store.js","index.js","lib/userForms/index.js","components/Header/Header.jsx","components/Header/HeaderIcon.jsx","lib/userForms/FormOne.jsx","lib/userForms/FormTwo.jsx","lib/userForms/FormThree.jsx","lib/userForms/FormFour.jsx","lib/userForms/FormFive.jsx","lib/userForms/FormSix.jsx","utils/validators.js","lib/userForms/PlayerForm.jsx"],"names":["DefaultCircle","id","playerCircle","centerPoint","isInit","createPathAndAnimation","path","animation","createRadialGradient","hue","saturation","lightness","createLinearPath","xCartesian","yCartesian","radius","d","style","fill","opacity","fillRule","stroke","strokeLinecap","DotCircle","lineDesign","href","secondaryColor","strokeWidth","designThickness","HollowCircle","color","RingCircle","innerPath","outerPath","innerRadius","outerRadius","isAnimated","dur","repeatCount","circlePathTemplate","StrokeCircle","resizeAllCircles","playerCircles","resizeRatio","offset","stopColor","stopOpacity","x","y","r","cx","cy","createCircleDesign","circleData","design","playerId","console","info","createHeaderIcons","currentForm","map","formName","i","className","Header","isActive","debounce","callback","wait","timeoutID","args","window","clearTimeout","setTimeout","apply","api","axios","create","baseURL","responseSchema","name","association","age","diet","gender","height","interest","time","personality","hair","food","money","nature","media","progress","religion","culture","Landing","NextButton","nextText","type","PreviousButton","prevText","handlePrevious","onClick","ResetButton","endGame","data-testid","StartButton","startGame","DisplayResults","FormSwitch","form","values","formProps","currentPlayer","log","PanelButtonRow","NextForm","FormHeading","numPlayers","players","formTabs","push","formInstructions","0","1","2","3","4","5","6","7","8","9","10","FormDisplay","onSubmit","initialValues","showNextOption","showInstructions","split","line","actions","props","GENERATE_SESSION","INITIALIZE_PLAYERS","START_GAME","END_GAME","NEXT_FORM","PREV_FORM","DISPLAY_CIRCLES","UPDATE_POLAR_GRID","FINAL_DISPLAY","UPDATE_DISPLAY_DIMENSIONS","NEXT_PLAYER","PREV_PLAYER","INITIAL_STATE","_id","inProgress","complete","displayGrid","playerIds","circles","finalCircles","updateCircles","resizeCircles","display","width","previousHeight","previousWidth","polarGridPath","dispatch","a","payload","nextPlayer","finalDisplay","getState","gameState","finalForm","circle","initializePlayersEmitter","socket","gameId","formValues","emit","updatePlayerEmitter","formData","responses","updateStep","res","fetchCirclesEmitter","finalDisplayEmitter","formResponseSchema","connect","rest","session","prevPlayer","nextForm","newForm","length","prevForm","handleSubmit","PolarGrid","CircleDisplay","DisplaySvg","resizePlayerCircles","useEffect","data","fetchPolarGrid","updateDisplayDimensions","Math","round","displaySVG","useRef","current","scrollHeight","scrollWidth","asyncUpdate","debounceHandleResize","addEventListener","_","removeEventListener","ref","generateSession","post","game","initializePlayers","initialData","displayCircles","circleSvgs","updatePolarGrid","useState","setSocket","newSocket","io","auth","on","combineReducers","state","action","playersObj","parseFloat","toFixed","oldHeight","oldWidth","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","querySelector","displayHeaderIcons","HeaderIcon","PeopleAltOutlined","FingerprintOutlined","WatchOutlined","PublicOutlined","ShoppingCartOutlined","LocalFloristOutlined","PaletteOutlined","FormOne","as","value","FormTwo","FormThree","FormFour","FormFive","FormSix","required","undefined","validateNumber","isNaN","Number","number","maxValue","minValue","validateString","maxLength","renderField","index","field","label","placeholder","PlayerForm","component","validate","remove","player","title"],"mappings":"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","file":"static/js/main.4cdcee1f.chunk.js","sourcesContent":["/* IMPORTS */\nimport React from \"react\";\nimport { createLinearPath, createRadialGradient, createPathAndAnimation } from \"../../utils\";\n/* ------ */\n\nexport const DefaultCircle = ({ id, playerCircle, centerPoint, isInit }) => {\n  const { path, animation } = createPathAndAnimation(playerCircle, id);\n\n  return (\n    <>\n      <defs>\n        {createRadialGradient(id, centerPoint, playerCircle.hue, playerCircle.saturation, playerCircle.lightness)}\n        {createLinearPath(id, centerPoint, playerCircle.xCartesian, playerCircle.yCartesian, playerCircle.radius, null)}\n      </defs>\n      <path\n        id={`circle_${id}${isInit ? \"_init\" : \"\"}`}\n        key={`circle_${id}${isInit ? \"_init\" : \"\"}`}\n        d={path}\n        style={{\n          fill: `url(#radialGradient${id})`,\n          opacity: `${isInit ? 0.2 : 1}`,\n          fillRule: \"evenodd\",\n          stroke: \"none\",\n          strokeLinecap: \"round\",\n        }}\n      >\n        {animation}\n      </path>\n    </>\n  );\n};\n","/* IMPORTS */\nimport React from \"react\";\nimport { createLinearPath, createRadialGradient, createPathAndAnimation } from \"../../utils\";\n/* ------ */\n\nexport const DotCircle = ({ id, playerCircle, centerPoint }) => {\n  const { path, animation } = createPathAndAnimation(playerCircle, id);\n  return (\n    <>\n      <defs>\n        {createRadialGradient(id, centerPoint, playerCircle.hue, playerCircle.saturation, playerCircle.lightness)}\n        {createLinearPath(\n          id,\n          centerPoint,\n          playerCircle.xCartesian,\n          playerCircle.yCartesian,\n          playerCircle.radius,\n          playerCircle.lineDesign\n        )}\n      </defs>\n      {playerCircle.lineDesign ? <use href={`#linearPath${id}`} /> : null}\n      <path\n        id={`circle_${id}`}\n        key={`circle_${id}`}\n        d={path}\n        style={{\n          fill: playerCircle.secondaryColor,\n          opacity: 1,\n          fillRule: \"evenodd\",\n          stroke: `url(#radialGradient${id})`,\n          strokeWidth: playerCircle.designThickness,\n        }}\n      >\n        {animation}\n      </path>\n    </>\n  );\n};\n","/* IMPORTS */\nimport React from \"react\";\nimport { createLinearPath, createRadialGradient, createPathAndAnimation } from \"../../utils\";\n/* ------ */\n\nexport const HollowCircle = ({ id, playerCircle, centerPoint }) => {\n  const { path, animation } = createPathAndAnimation(playerCircle, id);\n  return (\n    <>\n      <defs>\n        {createRadialGradient(id, centerPoint, playerCircle.hue, playerCircle.saturation, playerCircle.lightness)}\n        {createLinearPath(\n          id,\n          centerPoint,\n          playerCircle.xCartesian,\n          playerCircle.yCartesian,\n          playerCircle.radius,\n          playerCircle.lineDesign\n        )}\n      </defs>\n      {playerCircle.lineDesign ? <use href={`#linearPath${id}`} /> : null}\n      <path\n        id={`circle_${id}`}\n        key={`circle_${id}`}\n        d={path}\n        strokeWidth={playerCircle.designThickness}\n        stroke={playerCircle.color}\n        fill=\"none\"\n      >\n        {animation}\n      </path>\n    </>\n  );\n};\n","/* IMPORTS */\nimport React from \"react\";\nimport { createLinearPath, createRadialGradient, circlePathTemplate } from \"../../utils\";\n/* ------ */\n\nexport const RingCircle = ({ id, playerCircle, centerPoint }) => {\n  let animation, innerPath, outerPath;\n  const innerRadius = playerCircle.radius - 2 * playerCircle.designThickness;\n  const outerRadius = playerCircle.radius - 0.5 * playerCircle.designThickness;\n  if (playerCircle.isAnimated) {\n    animation = (\n      <animateMotion dur=\"10s\" repeatCount=\"indefinite\">\n        <mpath href={`#linearPath${id}`} />\n      </animateMotion>\n    );\n    innerPath = circlePathTemplate(0, 0, innerRadius);\n    outerPath = circlePathTemplate(0, 0, outerRadius);\n  } else {\n    animation = null;\n    innerPath = circlePathTemplate(playerCircle.xCartesian, playerCircle.yCartesian, innerRadius);\n    outerPath = circlePathTemplate(playerCircle.xCartesian, playerCircle.yCartesian, outerRadius);\n  }\n\n  return (\n    <>\n      <defs>\n        {createRadialGradient(id, centerPoint, playerCircle.hue, playerCircle.saturation, playerCircle.lightness)}\n        {createLinearPath(\n          id,\n          centerPoint,\n          playerCircle.xCartesian,\n          playerCircle.yCartesian,\n          playerCircle.radius,\n          playerCircle.lineDesign\n        )}\n      </defs>\n      {playerCircle.lineDesign ? <use href={`#linearPath${id}`} /> : null}\n      <g id={`circle_${id}`}>\n        <path\n          key={`circle_${id}_inner`}\n          d={innerPath}\n          style={{\n            fill: `url(#radialGradient${id})`,\n            opacity: 1,\n            fillRule: \"evenodd\",\n            strokeLinecap: \"round\",\n          }}\n        />\n        <path\n          key={`circle_${id}_outer`}\n          d={outerPath}\n          strokeWidth={playerCircle.designThickness}\n          stroke={playerCircle.secondaryColor}\n          fill=\"none\"\n        />\n        {animation}\n      </g>\n    </>\n  );\n};\n","/* IMPORTS */\nimport React from \"react\";\nimport { createLinearPath, createRadialGradient, createPathAndAnimation } from \"../../utils\";\n/* ------ */\n\nexport const StrokeCircle = ({ id, playerCircle, centerPoint }) => {\n  const { path, animation } = createPathAndAnimation(playerCircle, id);\n\n  return (\n    <>\n      <defs>\n        {createRadialGradient(id, centerPoint, playerCircle.hue, playerCircle.saturation, playerCircle.lightness)}\n        {createLinearPath(\n          id,\n          centerPoint,\n          playerCircle.xCartesian,\n          playerCircle.yCartesian,\n          playerCircle.radius,\n          playerCircle.lineDesign\n        )}\n      </defs>\n      {playerCircle.lineDesign ? <use href={`#linearPath${id}`} /> : null}\n      <path\n        id={`circle_${id}`}\n        key={`circle_${id}`}\n        d={path}\n        strokeWidth={playerCircle.designThickness}\n        stroke={playerCircle.secondaryColor}\n        style={{\n          fill: `url(#radialGradient${id})`,\n          opacity: 1,\n          fillRule: \"evenodd\",\n          strokeLinecap: \"round\",\n        }}\n      >\n        {animation}\n      </path>\n    </>\n  );\n};\n","import React from \"react\";\nimport { DefaultCircle, DotCircle, HollowCircle, RingCircle, StrokeCircle } from \"../lib/circles\";\n\n/**\n * Function that draws the player circles\n * @function drawPlayerCircles\n * @param {players[]} players -- Array of player objects\n * @param {number} currentForm -- Current form\n * @return {players[]} Array of player objects with newly created circleSVGs\n */\nfunction rerenderCircles(players, currentForm) {\n  if (currentForm <= 7) {\n    return Object.keys(players).map((playerKey) => {\n      return players[playerKey].circleSVG;\n    });\n  }\n  const allCircles = [];\n  players.forEach((player) => {\n    allCircles.push(player.circleSVG, player.initialCircleSVG);\n  });\n  console.log(allCircles);\n  return allCircles;\n}\n\n/**\n * Alter the size of the circles if the browser window resizes\n * @param {object} players\n * @param {object} display\n */\nfunction resizeAllCircles(playerCircles, resizeRatio) {\n  // const toResize = ['radius', 'xCartesian', 'yCartesian']\n  // console.log(\"resize all circles\");\n  // console.log(playerCircles, resizeRatio);\n  // playerCircles.forEach(playerCircle => {\n  //   console.log(playerCircle)\n  //   console.log(playerCircle.props.playerCircle)\n  //   for (const circleData in playerCircle.props.playerCircle) {\n  //     console.log(`${circleData}: ${playerCircle.props.playerCircle[circleData]}`)\n  //     if (toResize.includes(circleData)) {\n  //       playerCircle[circleData] = playerCircle[circleData] * resizeRatio\n  //     }\n  //   }\n  //\n  // })\n  // for (const circle of playerCircles) {\n  //   const playerCircleData = playerCircles[circle];\n  //   for (const data of playerCircleData) {\n  //     playerCircleData[data] = playerCircleData[data] * resizeRatio;\n  //   }\n  // }\n  // console.log(playerCircles);\n  return playerCircles;\n}\n\n/**\n * Creates the playerCircle's radial gradient\n * @function createRadialGradient\n * @param {number} hue -- playerCircle's hue\n * @param {number} saturation -- playerCircle's saturation\n * @param {number} lightness -- playerCircle's lightness\n * @param {number} id -- playerCircle's player id\n * @param {Object} centerPoint -- display grid's center position along x and y axis\n * @returns {JSX.Element} <radialGradient />\n * */\nfunction createRadialGradient(id, centerPoint, hue, saturation, lightness) {\n  return (\n    <radialGradient id={`radialGradient${id}`}>\n      <stop offset=\"0%\" stopColor={`hsl(${hue}, ${saturation}%, ${lightness * 1.6}%`} stopOpacity={1} />\n      <stop offset=\"25%\" stopColor={`hsl(${hue}, ${saturation}%, ${lightness * 1.45}%`} stopOpacity={1} />\n      <stop offset=\"50%\" stopColor={`hsl(${hue}, ${saturation}%, ${lightness * 1.3}%`} stopOpacity={1} />\n      <stop offset=\"75%\" stopColor={`hsl(${hue}, ${saturation}%, ${lightness * 1.15}%`} stopOpacity={1} />\n      <stop offset=\"100%\" stopColor={`hsl(${hue}, ${saturation}%, ${lightness}%`} stopOpacity={1} />\n    </radialGradient>\n  );\n}\n\n/**\n * Creates the animation path for the player's circle\n * @param {number} id -- playerCircle's player id\n * @param {Object} centerPoint -- display grid's center position along x and y axis\n * @param {number} x -- playerCircle's x location\n * @param {number} y - playerCircle's y location\n * @param {number} r -- playerCircle's radius\n * @param {Object} lineDesign -- playerCircle's stroke properties\n * @returns {JSX.Element} <path />\n */\nfunction createLinearPath(id, centerPoint, x, y, r, lineDesign) {\n  if (lineDesign !== null) {\n    return (\n      <path\n        id={`linearPath${id}`}\n        d={`m${x},${y} L${centerPoint.x},${centerPoint.y} ${x},${y}`}\n        style={{ ...lineDesign }}\n      />\n    );\n  }\n\n  return <path id={`linearPath${id}`} d={`m${x},${y} L${centerPoint.x},${centerPoint.y} ${x},${y}`} />;\n}\n\n/**\n * Creates the circle path based on player's playerCircleData\n * @param cx {number}\n * @param cy {number}\n * @param r {number}\n * @returns {string}\n */\nfunction circlePathTemplate(cx, cy, r) {\n  return `M ${cx} ${cy} m -${r}, 0 a ${r},${r} 0 1,0 ${r * 2},0 a ${r},${r} 0 1,0 -${r * 2},0 `;\n}\n\n/**\n * Creates the path and adds animation if .isAnimated === true\n * @param {object} playerCircle\n * @param {string} id\n * @returns {{path: string, animation: JSX.Element}}\n */\nfunction createPathAndAnimation(playerCircle, id) {\n  let path;\n  let animation;\n\n  if (playerCircle.isAnimated) {\n    animation = (\n      <animateMotion dur=\"10s\" repeatCount=\"indefinite\">\n        <mpath href={`#linearPath${id}`} />\n      </animateMotion>\n    );\n    path = circlePathTemplate(0, 0, playerCircle.radius);\n  } else {\n    animation = null;\n    path = circlePathTemplate(playerCircle.xCartesian, playerCircle.yCartesian, playerCircle.radius);\n  }\n\n  return { path, animation };\n}\n\n/**\n * Alters the animation path for the player's circle\n * @param {number} x -- playerCircle's x location\n * @param {number} y - playerCircle's y location\n * @param {number} r -- playerCircle's radius\n * @param {number} id -- playerCircle's player id\n * @param {Object} centerPoint -- display grid's center position along x and y axis\n * @returns {JSX.Element} <path />\n */\nfunction createEssPath(x, y, r, id, centerPoint) {\n  return (\n    <path\n      id={`essPath${id}`}\n      d={`m${x},${y} Q ${1},${1} ${centerPoint.x} ${centerPoint.y}`}\n      stroke=\"grey\"\n      strokeWidth=\"2px\"\n    />\n  );\n}\n\n/**\n * Creates the complex SVG design for each playerCircle\n * @param {string} playerId -- Player ID\n * @param {Object} circleData -- Player circle object\n * @param {Object} centerPoint -- display grid's center position along x and y axis\n * @returns {JSX.Element}\n */\nfunction createCircleDesign(circleData, centerPoint) {\n  const { design, playerId } = circleData;\n  switch (design) {\n    case \"initialCircle\": {\n      return (\n        <DefaultCircle\n          key={`circle_${playerId}_init`}\n          id={playerId}\n          playerCircle={circleData}\n          centerPoint={centerPoint}\n          isInit={true}\n        />\n      );\n    }\n    case \"defaultCircle\":\n      return (\n        <DefaultCircle\n          key={`circle_${playerId}`}\n          id={playerId}\n          playerCircle={circleData}\n          centerPoint={centerPoint}\n          isInit={false}\n        />\n      );\n    case \"hollow\":\n      return (\n        <HollowCircle key={`circle_${playerId}`} id={playerId} playerCircle={circleData} centerPoint={centerPoint} />\n      );\n    case \"stroke\":\n      return (\n        <StrokeCircle key={`circle_${playerId}`} id={playerId} playerCircle={circleData} centerPoint={centerPoint} />\n      );\n    case \"ring\":\n      return (\n        <RingCircle key={`circle_${playerId}`} id={playerId} playerCircle={circleData} centerPoint={centerPoint} />\n      );\n    case \"dot\":\n      return <DotCircle key={`circle_${playerId}`} id={playerId} playerCircle={circleData} centerPoint={centerPoint} />;\n    default:\n      console.info(\"%c[ERROR]: Switch - createCircleDesign\", \"color: red\");\n  }\n}\n\n/* Export necessary pieces */\nexport {\n  rerenderCircles,\n  resizeAllCircles,\n  circlePathTemplate,\n  createPathAndAnimation,\n  createRadialGradient,\n  createLinearPath,\n  createEssPath,\n  createCircleDesign,\n};\n","import {HeaderIcon} from \"../components/Header\";\nimport React from \"react\";\n\nexport const createHeaderIcons = (currentForm) => {\n  const formNames = [\"Participants\", \"Personal\", \"Mental\", \"Financial\", \"Natural\", \"Cultural\", \"Visual\"];\n  return formNames.map((formName, i) => {\n    return i === currentForm - 1 ? (\n      <div key={`${formName}-active`} className=\"icon__container\">\n        <HeaderIcon formName={formName} isActive={true} />\n      </div>\n    ) : (\n      <div key={`${formName}`} className=\"icon__container\">\n        <HeaderIcon formName={formName} isActive={false} />\n      </div>\n    );\n  });\n};","export const debounce = (callback, wait) => {\n  let timeoutID = null;\n  return (...args) => {\n    window.clearTimeout(timeoutID);\n    timeoutID = window.setTimeout(() => {\n      callback.apply(null, args);\n    }, wait);\n  };\n};","import axios from \"axios\";\nexport const api = axios.create({\n  baseURL: process.env.NODE_ENV === \"production\" ? \"https://dsc-circles.herokuapp.com\" : \"http://localhost:5500\",\n});\n","export const responseSchema = {\n  name: \"\",\n  association: \"\",\n  age: \"\",\n  diet: \"\",\n  gender: \"\",\n  height: \"\",\n  interest: \"\",\n  time: \"\",\n  personality: \"\",\n  hair: \"\",\n  food: \"\",\n  money: \"\",\n  nature: \"\",\n  media: \"\",\n  progress: \"\",\n  religion: \"\",\n  culture: \"\",\n  color: \"\",\n};\n","import React from \"react\";\nimport \"./landing.css\";\n\nexport const Landing = () => {\n  return (\n    <div className=\"landing\">\n      <p className=\"landing__text\">Drawn Together is an artistic collaboration between Daegan and Carrie Crane.</p>\n      <p className=\"landing__text\">For teams of 2-5 players.</p>\n      <p className=\"landing__text\">\n        As team progress through the sections, the game will create and alter a collection of circles based on your\n        teams common interest and varied personalities .\n      </p>\n      <p className=\"landing__text\">\n        In the end you will have unique visual interpretation of your teams’s connection to the common interest that\n        brought you together.\n      </p>\n    </div>\n  );\n};\n","/* IMPORTS */\nimport React from \"react\";\n/* ------ */\n\nexport const NextButton = ({ nextText }) => {\n  return (\n    <button type=\"submit\" className={`p-button p-button__game p-button__game_next `} id=\"nextButton\">\n      <span>{nextText}</span>\n    </button>\n  );\n};\n","/* IMPORTS */\nimport React from \"react\";\n/* ------ */\n\nexport const PreviousButton = ({ prevText, handlePrevious }) => {\n  return (\n    <button\n      className=\"p-button p-button__game p-button__game_prev\"\n      id=\"prevButton\"\n      type=\"button\"\n      onClick={() => handlePrevious()}\n    >\n      <span>{prevText}</span>\n    </button>\n  );\n};\n","import React from \"react\";\n\nexport const ResetButton = ({ endGame }) => {\n  return (\n    <button className=\"p-button p-button__start\" onClick={() => endGame()} data-testid=\"button-ResetButton\">\n      <span>\n        Restart <br /> Game\n      </span>\n    </button>\n  );\n};\n","import React from \"react\";\n\nexport const StartButton = ({ startGame }) => {\n  return (\n    <button className=\"p-button p-button__start\" onClick={() => startGame()} data-testid=\"button-StartButton\">\n      <span>\n        Begin <br /> Game\n      </span>\n    </button>\n  );\n};\n","import React from \"react\";\nimport { ResetButton } from \"../../lib/buttons\";\n\nconst DisplayResults = ({ endGame }) => {\n  return (\n    <div className=\"landing\">\n      <p className=\"landing__text\">The final results of your group are displayed to the right.</p>\n      <p className=\"landing__text\">If you would like to play again please hit the \"Reset\" button!</p>\n      <ResetButton endGame={endGame} />\n    </div>\n  );\n};\n\nexport default DisplayResults;\n","import React from \"react\";\nimport { FormOne, FormTwo, FormThree, FormFour, FormFive, FormSix, PlayerForm } from \"../../lib/userForms\";\n\nconst FormSwitch = ({ form, values, formProps, currentPlayer }) => {\n  switch (form) {\n    case 1:\n      return <PlayerForm values={values} formProps={formProps} />;\n    case 2:\n      return <FormOne values={values} formProps={formProps} currentPlayer={currentPlayer} />;\n    case 3:\n      return <FormTwo values={values} formProps={formProps} currentPlayer={currentPlayer} />;\n    case 4:\n      return <FormThree values={values} formProps={formProps} currentPlayer={currentPlayer} />;\n    case 5:\n      return <FormFour values={values} formProps={formProps} currentPlayer={currentPlayer} />;\n    case 6:\n      return <FormFive values={values} formProps={formProps} currentPlayer={currentPlayer} />;\n    case 7:\n      return <FormSix values={values} formProps={formProps} currentPlayer={currentPlayer} />;\n    default:\n      console.log(\"FormDisplay switch has failed\");\n  }\n};\n\nexport default FormSwitch;\n","import React from \"react\";\nimport { NextButton, PreviousButton } from \"../../lib/buttons\";\nimport \"./panelButtonRow.css\";\n\nexport const PanelButtonRow = ({ nextText, prevText, handlePrevious }) => {\n  return (\n    <div className=\"p-buttons__row\" data-testid=\"component-FormButtons\">\n      <div className=\"p-button__col\">\n        <PreviousButton prevText={prevText} handlePrevious={handlePrevious} />\n      </div>\n      <div className=\"p-button__col\">\n        <NextButton nextText={nextText} />\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const NextForm = () => {\n  return (\n    <div className=\"form\">\n      <div className=\"instructions\">\n        <p>\"Next Form\" to continue</p>\n        <p>or</p>\n        <p>\"Back\" to change responses</p>\n      </div>\n    </div>\n  );\n};\n","/* IMPORTS */\nimport React from \"react\";\nimport \"./formHeading.css\";\n/* ------ */\n\nexport const FormHeading = ({ currentPlayer, numPlayers, players }) => {\n  let formTabs = [];\n  if (numPlayers === 0) {\n\n  }\n  for (let i = 0; i < numPlayers; i++) {\n    formTabs.push(\n      <div\n        key={`${players[i].name}_${i}`}\n        className={`heading__tab ${i === currentPlayer ? \"heading__tab-active\" : \"\"}`}\n      >\n        {players[i].name}\n      </div>\n    );\n  }\n\n  return <div className=\"form__heading\">{formTabs}</div>;\n};\n","export const formInstructions = {\n  0: `Circle Generator is the artistic brainchild of Carrie Crane. Moving through the sections of the game will create and alter a collection of circles based on your groups common interest and a variety of personality factors. By the end you will have unique visual of how the members of your group are connected to the common interest that brought you together.`,\n  1: `Choose an interest or activity that connects your group. (event, hobby, career, etc).\\nEnter name and length of time associate with the common interest.\\nOnce each person has entered the information click 'Submit' to begin.`,\n  2: \"Choose the option that fits best.\\n(Options are meant to be humorous and should not be taken seriously)\",\n  3: \"Choose the option that fits best.\\n(Options are meant to be humorous and should not be taken seriously)\",\n  4: \"Choose the option that fits best.\\n(Options are meant to be humorous and should not be taken seriously)\",\n  5: \"Choose the option that fits best.\\n(Options are meant to be humorous and should not be taken seriously)\",\n  6: \"Choose the option that fits best.\\n(Options are meant to be humorous and should not be taken seriously)\",\n  7: \"Choose the option that fits best.\\n(Options are meant to be humorous and should not be taken seriously)\",\n  8: \"Choose the option that fits best.\\n(Options are meant to be humorous and should not be taken seriously)\",\n  9: \"Choose the option that fits best.\\n(Options are meant to be humorous and should not be taken seriously)\",\n  10: \"\"\n}\n","import React from \"react\";\nimport { Formik, Form } from \"formik\";\nimport { FormSwitch } from \"../FormSwitch\";\nimport { PanelButtonRow } from \"../PanelButtonRow\";\nimport { NextForm } from \"./NextForm\";\nimport { FormHeading } from \"../FormHeading\";\nimport { formInstructions } from \"../../lib/instructions\";\nimport \"./formDisplay.css\";\n\nconst FormDisplay = ({ onSubmit, initialValues, handlePrevious, currentForm, currentPlayer, numPlayers, players }) => {\n  const showNextOption = currentPlayer !== numPlayers || currentForm < 2;\n  const showInstructions = showNextOption ? (\n    <div className=\"form__row form__row-instructions\">\n      <div className=\"instructions\">\n        {formInstructions[currentForm].split(\"\\n\").map((line, i) => (\n          <p key={`instruction-line-${i}`}>{line}</p>\n        ))}\n      </div>\n    </div>\n  ) : null;\n  return (\n    <>\n      <Formik initialValues={initialValues} onSubmit={(values, actions) => onSubmit(values, actions)}>\n        {({ values, ...props }) => (\n          <>\n            {currentForm === 1 ? null : (\n              <FormHeading currentPlayer={currentPlayer} numPlayers={numPlayers} players={players} />\n            )}\n            <Form className={`form ${currentForm > 1 ? \"form__stretch\" : \"\"}`}>\n              {showInstructions}\n              <div className={`form__group ${currentForm > 1 ? \"form__group-center\" : \"\"}`}>\n                {showNextOption ? (\n                  <FormSwitch form={currentForm} currentPlayer={currentPlayer} values={values} formProps={props} />\n                ) : (\n                  <NextForm />\n                )}\n              </div>\n              <div className=\"form__row form__row-buttons\">\n                <PanelButtonRow\n                  prevText={\"Back\"}\n                  nextText={showNextOption ? \"Submit\" : \"Next Form\"}\n                  handlePrevious={handlePrevious}\n                />\n              </div>\n            </Form>\n          </>\n        )}\n      </Formik>\n    </>\n  );\n};\nexport default FormDisplay;\n","// Game Action Types\nexport const GENERATE_SESSION = \"GENERATE_SESSION\";\nexport const INITIALIZE_PLAYERS = \"INITIALIZE_PLAYERS\";\nexport const START_GAME = \"START_GAME\";\nexport const END_GAME = \"END_GAME\";\nexport const NEXT_FORM = \"NEXT_FORM\";\nexport const PREV_FORM = \"PREV_FORM\";\n\nexport const RESET_FORM = \"RESET_FORM\";\n\n// Display Action Types\nexport const DISPLAY_CIRCLES = \"DISPLAY_CIRCLES\";\nexport const UPDATE_POLAR_GRID = \"UPDATE_POLAR_GRID\";\nexport const FINAL_DISPLAY = \"FINAL_DISPLAY\";\nexport const UPDATE_DISPLAY_DIMENSIONS = \"UPDATE_DISPLAY_DIMENSIONS\";\n\n// export const UPDATE_DISPLAY_GRID = \"UPDATE_DISPLAY_GRID\";\n// export const UPDATE_VIEW = \"UPDATE_VIEW\";\n\n// export const RESIZE_PLAYER_CIRCLES = \"RESIZE_PLAYER_CIRCLES\";\n\n// Player Action Types\nexport const NEXT_PLAYER = \"NEXT_PLAYER\";\nexport const PREV_PLAYER = \"PREV_PLAYER\";\n\n// export const UPDATE_PLAYER_CIRCLE = \"UPDATE_PLAYER_CIRCLE\";\n// export const UPDATE_FINAL_CIRCLES = \"UPDATE_FINAL_CIRCLES\";\n// export const UPDATE_PLAYER = \"UPDATE_PLAYER\";\n\nexport const INITIAL_STATE = {\n  // session data\n  _id: \"\",\n  inProgress: false,\n  complete: false,\n  displayGrid: false,\n  numPlayers: 0,\n  currentForm: 0,\n  playerIds: [],\n  interest: \"\",\n  currentPlayer: 0,\n\n  players: {},\n  circles: [],\n  finalCircles: [],\n\n  // display data\n  updateCircles: false,\n  resizeCircles: false,\n  centerPoint: { x: 0, y: 0 },\n  display: {\n    resizeRatio: 1,\n    centerPoint: { x: 0, y: 0 },\n    height: 0,\n    width: 0,\n    previousHeight: 0,\n    previousWidth: 0,\n    polarGridPath: \"\",\n  },\n};\n","import {\n  GENERATE_SESSION,\n  INITIALIZE_PLAYERS,\n  START_GAME,\n  END_GAME,\n  NEXT_FORM,\n  PREV_FORM,\n  DISPLAY_CIRCLES,\n  UPDATE_POLAR_GRID,\n  FINAL_DISPLAY,\n  UPDATE_DISPLAY_DIMENSIONS,\n  NEXT_PLAYER,\n  PREV_PLAYER,\n  // RESIZE_PLAYER_CIRCLES,\n} from \"../types\";\nimport { createCircleDesign } from \"../../utils\";\nimport { api } from \"../../utils\";\n\n/* ----   Game Actions    ---- */\n// GENERATE_SESSION ACTION CREATOR\nexport const generateSession = () => async (dispatch) => {\n  const { data } = await api.post(\"/games/generateSession\", {});\n  console.log(data);\n  dispatch({\n    type: GENERATE_SESSION,\n    payload: { game: data.game },\n  });\n};\n// CREATE_PLAYERS ACTION CREATOR\nexport const initializePlayers = (initialData) => async (dispatch) => {\n  dispatch({\n    type: INITIALIZE_PLAYERS,\n    payload: { ...initialData },\n  });\n};\n// START_GAME ACTION CREATOR\nexport const startGame = () => async (dispatch) => {\n  dispatch({\n    type: START_GAME,\n    payload: {\n      inProgress: true,\n      currentForm: 1,\n      displayGrid: true,\n      currentPlayer: 0,\n    },\n  });\n};\n// END_GAME ACTION CREATOR\nexport const endGame = () => (dispatch) => {\n  dispatch({ type: END_GAME });\n};\n// NEXT_FORM ACTION CREATOR\nexport const nextForm = (currentForm) => async (dispatch, getState) => {\n  const { players, currentPlayer } = getState().gameState;\n  const newForm = currentForm + 1;\n  const nextPlayer = players.length === 0 ? currentPlayer : 0;\n  await dispatch({\n    type: NEXT_FORM,\n    payload: { currentPlayer: nextPlayer, currentForm: newForm },\n  });\n};\n// PREV_FORM ACTION CREATOR\nexport const prevForm = (currentForm) => async (dispatch, getState) => {\n  const { numPlayers } = getState().gameState;\n  const newForm = currentForm - 1;\n  await dispatch({\n    type: PREV_FORM,\n    payload: { currentForm: newForm, currentPlayer: numPlayers, circles: [] },\n  });\n};\n/* ----  ***  ---- */\n\n/* ----   Player Actions    ---- */\n// NEXT_PLAYER ACTION CREATOR\nexport const nextPlayer = (currentPlayer) => (dispatch) => {\n  const newPlayer = currentPlayer + 1;\n  dispatch({\n    type: NEXT_PLAYER,\n    payload: { currentPlayer: newPlayer },\n  });\n};\n// PREV_PLAYER ACTION CREATOR\nexport const prevPlayer = (currentPlayer) => (dispatch) => {\n  const newPlayer = currentPlayer - 1;\n  dispatch({\n    type: PREV_PLAYER,\n    payload: { currentPlayer: newPlayer },\n  });\n};\n/* ----  ***  ---- */\n\n/* ----   Display Actions    ---- */\n// DISPLAY_CIRCLES ACTION CREATOR\nexport const displayCircles = (circles) => (dispatch, getState) => {\n  const { display } = getState().gameState;\n  const circleSvgs = circles.map((circle) => createCircleDesign(circle, display.centerPoint));\n  console.log(circleSvgs);\n  dispatch({\n    type: DISPLAY_CIRCLES,\n    payload: {\n      circleSvgs,\n    },\n  });\n};\n// UPDATE_POLAR_GRID ACTION CREATOR\nexport const updatePolarGrid = (polarGridPath) => (dispatch) => {\n  dispatch({\n    type: UPDATE_POLAR_GRID,\n    payload: polarGridPath,\n  });\n};\n// FINAL_DISPLAY ACTION CREATOR\nexport const finalDisplay = (circles) => async (dispatch, getState) => {\n  const { display, currentForm } = getState().gameState;\n  const finalForm = currentForm + 1;\n  const finalCircles = circles.map((circle) => createCircleDesign(circle, display.centerPoint));\n\n  dispatch({\n    type: FINAL_DISPLAY,\n    payload: { finalCircles: finalCircles, displayGrid: false, inProgress: false, currentForm: finalForm },\n  });\n};\n// UPDATE_DISPLAY_DIMENSIONS ACTION CREATOR\nexport const updateDisplayDimensions =\n  ({ height, width }) =>\n  (dispatch) => {\n    dispatch({\n      type: UPDATE_DISPLAY_DIMENSIONS,\n      payload: {\n        height: Math.round(height),\n        width: Math.round(width),\n      },\n    });\n  };\n/* ----  ***  ---- */\n\n// export const resizePlayerCircles =\n//   ({ cx, cy }) =>\n//   (dispatch) => {\n//     //TODO:\n//     // find new way to resize circles\n//     // return the new circles and correctly resize the display\n//     // have alteration be constant after a resize until the next resize\n//\n//     dispatch({\n//       type: RESIZE_PLAYER_CIRCLES,\n//       payload: { cx, cy },\n//     });\n//   };\n\n// UPDATE_PLAYER_CIRCLE ACTION CREATOR\n/*export const updatePlayerCircle = (player, currentPlayer, currentForm) => async (dispatch, getState) => {\n  const { centerPoint } = getState().gameState;\n\n\n\n  return;\n  // dispatch({\n  //   type: UPDATE_PLAYER_CIRCLE,\n  //   payload: { currentPlayer, updatedPlayerCircle, updateCircles: true },\n  // });\n};*/\n// UPDATE_PLAYER ACTION CREATOR\n// export const updatePlayer =\n//   (playerIndex, { playerId, circleData, initialCircleData }) =>\n//   async (dispatch, getState) => {\n//     const { centerPoint, players } = getState().gameState;\n//     // const {\n//     //   data: { data, error },\n//     // } = await api.patch(\"/users/update\", {\n//     //   centerPoint,\n//     //   _id: playerId,\n//     //   responses: formData,\n//     //   updateStep: currentForm,\n//     // });\n//\n//     // if (error) {\n//     //   await alert(error.message);\n//     //   dispatch({\n//     //     type: RESET_FORM,\n//     //     payload: { currentPlayer: playerIndex },\n//     //   });\n//     //   return false;\n//     // }\n//\n//     const circleSVG = createCircleDesign(circleData);\n//     await dispatch({\n//       type: UPDATE_PLAYER_CIRCLE,\n//       payload: {\n//         circleSVG,\n//         circles: {\n//           circleData: circleData,\n//           initialCircleData: initialCircleData || players[playerIndex].initialCircleData,\n//         },\n//         playerIndex,\n//       },\n//     });\n//     return true;\n//   };\n// // UPDATE_DISPLAY_GRID ACTION CREATOR\n// export const updateGridDisplay = (view) => async (dispatch, getState) => {\n//   const resizeRatio = getState().gameState.display.resizeRatio;\n//   const updatedGrid = await handleGridUpdate(view, resizeRatio);\n//\n//   dispatch({\n//     type: UPDATE_DISPLAY_GRID,\n//     payload: { ...updatedGrid, resizeCircles: true },\n//   });\n// };\n// RESIZE_PLAYER_CIRCLES ACTION CREATOR\n","export const initializePlayersEmitter = (socket, gameId, formValues) => {\n  socket.emit(\"initialize-players\", { gameId, formValues });\n};\n\nexport const updatePlayerEmitter = (socket, playerId, formData, currentForm, centerPoint) => {\n  socket.emit(\n    \"update-player\",\n    {\n      centerPoint,\n      _id: playerId,\n      responses: formData,\n      updateStep: currentForm,\n    },\n    (res) => {\n      console.log(res);\n    }\n  );\n};\n\nexport const fetchCirclesEmitter = (socket) => {\n  socket.emit(\"fetch-circles\");\n};\n\nexport const fetchPolarGrid = (socket, data) => {\n  socket.emit(\"fetch-polar-grid\", data);\n};\n\nexport const finalDisplayEmitter = (socket) => {\n  socket.emit(\"final-display\");\n};\n","import React from \"react\";\nimport { FormDisplay } from \"../FormDisplay\";\nimport { connect } from \"react-redux\";\nimport { endGame, finalDisplay, nextForm, nextPlayer, prevForm, prevPlayer } from \"../../redux/actions\";\nimport {\n  fetchCirclesEmitter,\n  finalDisplayEmitter,\n  initializePlayersEmitter,\n  updatePlayerEmitter,\n} from \"../../socket.io/emitters\";\nimport { responseSchema } from \"../../utils\";\n\nconst formResponseSchema = {\n  interest: \"\",\n  players: [responseSchema, responseSchema],\n};\n\nconst FormContainer = ({\n  socket,\n  session,\n  gameId,\n  players,\n  nextPlayer,\n  prevPlayer,\n  nextForm,\n  prevForm,\n  endGame,\n  centerPoint,\n}) => {\n  const { currentForm, currentPlayer, numPlayers } = session;\n  const handlePrevious = async () => {\n    if (currentForm === 1) {\n      await endGame();\n    } else if (currentPlayer === 0) {\n      await prevForm(currentForm);\n    } else {\n      await prevPlayer(currentPlayer);\n    }\n  };\n  const handleSubmit = async (values) => {\n    if (currentForm === 1) {\n      await initializePlayersEmitter(socket, gameId, values);\n      await nextForm(currentForm);\n      return;\n    }\n    if (currentForm === 7 && currentPlayer === numPlayers) {\n      await finalDisplayEmitter(socket);\n      return;\n    }\n    if (currentForm >= 2 && currentForm <= 7) {\n      if (currentPlayer < numPlayers) {\n        await updatePlayerEmitter(\n          socket,\n          session.playerIds[currentPlayer],\n          values.players[currentPlayer],\n          currentForm,\n          centerPoint\n        );\n        await nextPlayer(currentPlayer);\n      } else {\n        await fetchCirclesEmitter(socket);\n        await nextForm(currentForm);\n      }\n    }\n  };\n\n  return (\n    <div className={`form__container ${currentForm === 1 ? \"form__container-border\" : \"\"}`}>\n      <div className=\"form__scroll\">\n        <FormDisplay\n          onSubmit={handleSubmit}\n          handlePrevious={handlePrevious}\n          initialValues={formResponseSchema}\n          currentForm={currentForm}\n          currentPlayer={currentPlayer}\n          numPlayers={numPlayers}\n          players={players}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ gameState }) => {\n  const { _id, display, players, ...rest } = gameState;\n  return {\n    centerPoint: display.centerPoint,\n    players,\n    gameId: _id,\n    session: rest,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  nextPlayer,\n  prevPlayer,\n  nextForm,\n  prevForm,\n  endGame,\n  finalDisplay,\n})(FormContainer);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Header } from \"../Header\";\nimport { Landing } from \"../Landing\";\nimport { DisplayResults } from \"../DisplayResults\";\nimport { FormContainer } from \"../FormContainer\";\nimport { startGame, endGame } from \"../../redux/actions\";\nimport \"./panel.css\";\n\nconst Panel = ({ socket, currentForm, inProgress, endGame }) => {\n  const display = () => {\n    if (inProgress) {\n      return <FormContainer socket={socket} />;\n    } else {\n      return currentForm === 8 ? <DisplayResults endGame={endGame} /> : <Landing />;\n    }\n  };\n  return (\n    <div className=\"app-panel\" data-testid=\"component-Panel\">\n      <div className=\"panel__row panel__row-header\">\n        <Header currentForm={currentForm} />\n      </div>\n      <div className=\"panel__row panel__row-content\">{display()}</div>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ gameState }) => {\n  const { currentForm, inProgress } = gameState;\n  return { currentForm, inProgress };\n};\n\nexport default connect(mapStateToProps, { startGame, endGame })(Panel);\n","import React from \"react\";\nimport \"./polarGrid.css\";\n// TODO move the calculations of the grid to the server and only render the path from this component\n\nconst PolarGrid = ({ path }) => {\n  return <path className=\"polarGrid\" d={path} />;\n};\n\nexport default PolarGrid;\n","import React from \"react\";\nimport { resizeAllCircles } from \"../../utils\";\n\nconst CircleDisplay = ({ currentForm, playerCircles, resizeRatio, resizeCircles }) => {\n  let circles;\n  if (resizeCircles) {\n    circles = resizeAllCircles(playerCircles, resizeRatio);\n  } else {\n    circles = playerCircles;\n  }\n\n  return currentForm > 2 ? circles.map((circle) => <>{circle}</>) : <></>;\n};\n\nexport default CircleDisplay;\n","/* IMPORTS */\nimport React, { useEffect } from \"react\";\nimport { PolarGrid } from \"../../PolarGrid\";\nimport { CircleDisplay } from \"../../CircleDisplay\";\nimport { fetchPolarGrid } from \"../../../socket.io/emitters\";\n/* ------ */\n\nconst DisplaySvg = ({ socket, display, session, resizePlayerCircles }) => {\n  /* Update the display grid based on new view dimensions */\n  const { width, centerPoint } = display;\n  useEffect(() => {\n    if (!display.polarGridPath) {\n      return;\n    }\n    fetchPolarGrid(socket, {\n      width,\n      centerPoint,\n    });\n  }, [width, socket]);\n  return (\n    <svg className={`svg__canvas ${session.currentForm === 8 ? \"svg__canvas-light\" : \"\"}`}>\n      {session.displayGrid ? <PolarGrid path={display.polarGridPath} /> : null}\n      {session.currentForm > 2 ? (\n        <CircleDisplay\n          currentForm={session.currentForm}\n          playerCircles={session.finalCircles.length ? session.finalCircles : session.circles}\n          resizeRatio={display.resizeRatio}\n          resizeCircles={session.resizeCircles}\n          resizePlayerCircles={resizePlayerCircles}\n        />\n      ) : null}\n    </svg>\n  );\n};\n\nexport default DisplaySvg;\n","import React, { useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateDisplayDimensions, startGame } from \"../../redux/actions\";\nimport { debounce } from \"../../utils\";\nimport { DisplaySvg } from \"./components\";\nimport \"./canvas.css\";\nimport { StartButton } from \"../../lib/buttons\";\n\nconst Canvas = ({ socket, display, session, updateDisplayDimensions, startGame }) => {\n  const displaySVG = useRef(null);\n\n  /* Sets initial bounds for background grid */\n  useEffect(() => {\n    const asyncUpdate = async () => {\n      await updateDisplayDimensions({\n        height: displaySVG.current.scrollHeight || null,\n        width: displaySVG.current.scrollWidth || null,\n      });\n    };\n    asyncUpdate();\n  }, [updateDisplayDimensions]);\n\n  /* Debounced handler for catching window resized and changing bounds for background grid */\n  useEffect(() => {\n    const debounceHandleResize = debounce(function () {\n      updateDisplayDimensions({\n        height: displaySVG.current.scrollHeight,\n        width: displaySVG.current.scrollWidth,\n      });\n    }, 500);\n    window.addEventListener(\"resize\", debounceHandleResize);\n    return (_) => window.removeEventListener(\"resize\", debounceHandleResize);\n  }, [display.height, display.width, updateDisplayDimensions]);\n\n  return (\n    <div className=\"svg__container\" ref={displaySVG}>\n      {session.currentForm !== 0 ? (\n        <DisplaySvg socket={socket} session={session} display={display} />\n      ) : (\n        <StartButton startGame={startGame} />\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ gameState }) => {\n  const { display, ...rest } = gameState;\n  return {\n    display,\n    session: rest,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateDisplayDimensions,\n  startGame,\n})(Canvas);\n","import React, { useEffect, useState } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { connect } from \"react-redux\";\nimport { Panel } from \"./components/Panel\";\nimport { Canvas } from \"./components/Canvas\";\nimport {\n  generateSession,\n  initializePlayers,\n  nextPlayer,\n  displayCircles,\n  updatePolarGrid,\n  finalDisplay,\n} from \"./redux/actions\";\n\nexport const App = ({\n  _id,\n  inProgress,\n  display,\n  displayCircles,\n  finalDisplay,\n  generateSession,\n  initializePlayers,\n  nextPlayer,\n  updatePolarGrid,\n}) => {\n  const [socket, setSocket] = useState(null);\n  const { width, centerPoint } = display;\n\n  useEffect(() => {\n    generateSession();\n  }, []);\n  useEffect(() => {\n    if (inProgress) {\n      let newSocket = io(\"http://localhost:5500\", { auth: { gameId: _id } });\n      setSocket(newSocket);\n      return;\n    }\n  }, [inProgress]);\n\n  useEffect(() => {\n    if (!inProgress) {\n      return;\n    }\n    socket.on(\"connect\", async () => {\n      await socket.emit(\"fetch-polar-grid\", {\n        width,\n        centerPoint,\n      });\n    });\n    socket.on(\"initialized-players\", (data) => {\n      initializePlayers(data);\n    });\n    socket.on(\"polar-grid\", (polarGridPath) => {\n      updatePolarGrid(polarGridPath);\n    });\n    socket.on(\"display-circles\", (circles) => {\n      displayCircles(circles);\n    });\n    socket.on(\"final-display-circles\", (circles) => {\n      finalDisplay(circles);\n    });\n  }, [socket, _id, initializePlayers, nextPlayer]);\n\n  return (\n    <div className=\"app\" data-testid=\"component-App\">\n      <div className=\"app__display\">\n        <div className=\"app__sidebar\">\n          <Panel socket={socket} />\n        </div>\n        <div className=\"app__canvas\">\n          <Canvas socket={socket} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ gameState: { _id, inProgress, display } }) => {\n  return {\n    _id,\n    inProgress,\n    display,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  generateSession,\n  initializePlayers,\n  nextPlayer,\n  displayCircles,\n  finalDisplay,\n  updatePolarGrid,\n})(App);\n","import { combineReducers } from \"redux\";\nimport { reducer as formReducer } from \"redux-form\";\nimport gameReducer from \"./gameReducer\";\n\nexport default combineReducers({ gameState: gameReducer, form: formReducer });\n","import {\n  INITIAL_STATE,\n  GENERATE_SESSION,\n  INITIALIZE_PLAYERS,\n  START_GAME,\n  END_GAME,\n  NEXT_FORM,\n  PREV_FORM,\n  DISPLAY_CIRCLES,\n  UPDATE_POLAR_GRID,\n  FINAL_DISPLAY,\n  UPDATE_DISPLAY_DIMENSIONS,\n  NEXT_PLAYER,\n  PREV_PLAYER,\n  // RESIZE_PLAYER_CIRCLES,\n} from \"../types\";\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case GENERATE_SESSION: {\n      console.info(action.type, action.payload);\n      return {\n        ...state,\n        ...action.payload.game,\n      };\n    }\n    case INITIALIZE_PLAYERS:\n      console.info(action.type, action.payload);\n      return {\n        ...state,\n        interest: action.payload.interest,\n        numPlayers: action.payload.numPlayers,\n        players: {\n          ...state.players,\n          ...action.payload.playersObj /*to change to players*/,\n        },\n        playerIds: [...state.playerIds, ...action.payload.playerIds],\n      };\n    case START_GAME:\n      console.info(action.type, action.payload);\n      return {\n        ...state,\n        ...action.payload,\n      };\n    case END_GAME:\n      console.info(action.type, action.payload);\n      return {\n        ...INITIAL_STATE,\n        display: {\n          ...state.display,\n        },\n      };\n    case NEXT_FORM:\n      console.info(action.type, action.payload);\n      return {\n        ...state,\n        ...action.payload,\n      };\n    case PREV_FORM:\n      console.info(action.type, action.payload);\n      return {\n        ...state,\n        ...action.payload,\n      };\n\n    case DISPLAY_CIRCLES:\n      console.info(action.type, action.payload);\n      return {\n        ...state,\n        circles: [...action.payload.circleSvgs],\n      };\n\n    // case RESET_FORM:\n    //   console.log(action.type, action.payload);\n    //   return {\n    //     ...state,\n    //     ...action.payload,\n    //   };\n    case NEXT_PLAYER:\n      console.info(action.type, action.payload);\n      return {\n        ...state,\n        ...action.payload,\n      };\n    case PREV_PLAYER:\n      console.info(action.type, action.payload);\n      return {\n        ...state,\n        ...action.payload,\n      };\n\n    case FINAL_DISPLAY:\n      console.info(action.type, action.payload);\n      return {\n        ...state,\n        inProgress: action.payload.inProgress,\n        currentForm: action.payload.currentForm,\n        displayGrid: action.payload.displayGrid,\n        finalCircles: [...state.finalCircles, ...action.payload.finalCircles],\n      };\n\n    case UPDATE_POLAR_GRID:\n      console.info(action.type, action.payload);\n      return {\n        ...state,\n        display: {\n          ...state.display,\n          polarGridPath: action.payload,\n        },\n      };\n    case UPDATE_DISPLAY_DIMENSIONS:\n      console.info(action.type, action.payload);\n      return {\n        ...state,\n        display: {\n          ...state.display,\n          ...action.payload,\n          centerPoint: {\n            y: parseFloat((action.payload.height / 2).toFixed(4)),\n            x: parseFloat((action.payload.width / 2).toFixed(4)),\n          },\n          oldHeight: state.display.height,\n          oldWidth: state.display.width,\n        },\n      };\n    default:\n      return state;\n  }\n};\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport reduxThunk from \"redux-thunk\";\nimport reducers from \"./redux/reducers\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport const store = createStore(reducers, composeEnhancers(applyMiddleware(reduxThunk)));\n","import \"./root.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport { store } from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n","export * from \"./PlayerForm\";\nexport * from \"./InterestForm\";\nexport * from \"./FormOne\";\nexport * from \"./FormTwo\";\nexport * from \"./FormThree\";\nexport * from \"./FormFour\";\nexport * from \"./FormFive\";\nexport * from \"./FormSix\";\n","import React from \"react\";\nimport { createHeaderIcons } from \"../../utils\";\nimport \"./header.css\";\n\nconst Header = ({ currentForm }) => {\n  const displayHeaderText = currentForm > 0 ? null : <></>;\n  const displayHeaderIcons = currentForm > 0 && currentForm < 8 ? createHeaderIcons(currentForm) : null;\n  return (\n    <div className=\"header\" data-testid=\"component-Header\">\n      <h1 className=\"header__title\">\n        Drawn <br />\n        Together\n      </h1>\n      <h3 className=\"header__text\">an interactive visual investigation</h3>\n      <div className=\"header__icons\">{displayHeaderIcons}</div>\n    </div>\n  );\n};\n\nexport default Header;\n","/* IMPORTS */\nimport React from \"react\";\nimport {\n  FingerprintOutlined,\n  LocalFloristOutlined,\n  PaletteOutlined,\n  PeopleAltOutlined,\n  PublicOutlined,\n  ShoppingCartOutlined,\n  WatchOutlined,\n} from \"@material-ui/icons\";\n/* ------ */\n\nexport const HeaderIcon = ({ formName, isActive }) => {\n  switch (formName) {\n    case \"Participants\":\n      return <PeopleAltOutlined className={`header__icon ${isActive ? \"header__icon-active\" : \"\"}`} />;\n    case \"Personal\":\n      return <FingerprintOutlined className={`header__icon ${isActive ? \"header__icon-active\" : \"\"}`} />;\n    case \"Mental\":\n      return <WatchOutlined className={`header__icon ${isActive ? \"header__icon-active\" : \"\"}`} />;\n    case \"Financial\":\n      return <PublicOutlined className={`header__icon ${isActive ? \"header__icon-active\" : \"\"}`} />;\n    case \"Natural\":\n      return <ShoppingCartOutlined className={`header__icon ${isActive ? \"header__icon-active\" : \"\"}`} />;\n    case \"Cultural\":\n      return <LocalFloristOutlined className={`header__icon ${isActive ? \"header__icon-active\" : \"\"}`} />;\n    case \"Visual\":\n      return <PaletteOutlined className={`header__icon ${isActive ? \"header__icon-active\" : \"\"}`} />;\n    default:\n      console.log(\"HeaderIcon switch has failed\");\n  }\n};\n","import React from \"react\";\nimport { Field } from \"formik\";\n\nexport const FormOne = ({ currentPlayer }) => {\n  return (\n    <>\n      <div className=\"form__row\">\n        <label className=\"item__label item__label-select\">Height</label>\n        <Field className=\"form__control form__control-select\" name={`players.${currentPlayer}.height`} id=\"formHeight\" as=\"select\">\n          <option value=\"DEFAULT\">Choose...</option>\n          <option value={16}>Tall</option>\n          <option value={32}>Average</option>\n          <option value={48}>Short</option>\n        </Field>\n      </div>\n      <div className=\"form__row\">\n        <label className=\"item__label item__label-select\">Interest</label>\n        <Field className=\"form__control form__control-select\" name={`players.${currentPlayer}.interest`} id=\"formInterest\" as=\"select\">\n          <option value=\"DEFAULT\">Choose...</option>\n          <option value={27}>Numbers</option>\n          <option value={36}>Words</option>\n          <option value={18}>Ideas</option>\n          <option value={9}>Images</option>\n          <option value={0}>People</option>\n        </Field>\n      </div>\n      <div className=\"form__row\">\n        <label className=\"item__label item__label-select\">Gender</label>\n        <Field className=\"form__control form__control-select\" name={`players.${currentPlayer}.gender`} id=\"formGender\" as=\"select\">\n          <option value=\"DEFAULT\">Choose...</option>\n          <option value={2}>Male</option>\n          <option value={1}>Female</option>\n          <option value={0}>Non Binary</option>\n        </Field>\n      </div>\n      <div className=\"form__row\">\n        <label className=\"item__label item__label-select\">Age</label>\n        <Field className=\"form__control form__control-select\" name={`players.${currentPlayer}.age`} id=\"formAge\" as=\"select\">\n          <option value=\"DEFAULT\">Choose...</option>\n          <option value={400}>0-10</option>\n          <option value={40}>11-20</option>\n          <option value={360}>21-30</option>\n          <option value={80}>31-40</option>\n          <option value={320}>41-50</option>\n          <option value={120}>51-60</option>\n          <option value={280}>61-70</option>\n          <option value={160}>71-80</option>\n          <option value={240}>81-90</option>\n          <option value={200}>91-100</option>\n        </Field>\n      </div>\n      <div className=\"form__row\">\n        <label className=\"item__label item__label-select\">Diet</label>\n        <Field className=\"form__control form__control-select\" name={`players.${currentPlayer}.diet`} id=\"formDiet\" as=\"select\">\n          <option value=\"DEFAULT\">Choose...</option>\n          <option value=\"omnivore\">Omnivore</option>\n          <option value=\"vegetarian\">Vegetarian</option>\n          <option value=\"pescatarian\">Pescatarian</option>\n          <option value=\"vegan\">Vegan</option>\n        </Field>\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nimport { Field } from \"formik\";\n\nexport const FormTwo = ({ currentPlayer }) => {\n  return (\n    <>\n      <div className=\"form__row\">\n        <label className=\"item__label item__label-select\">Time</label>\n        <Field\n          className=\"form__control form__control-select\"\n          name={`players.${currentPlayer}.time`}\n          id=\"formTemporal\"\n          as=\"select\"\n        >\n          <option value=\"DEFAULT\">Choose...</option>\n          <option value={18}>Morning</option>\n          <option value={45}>Evening</option>\n        </Field>\n      </div>\n      <div className=\"form__row\">\n        <label className=\"item__label item__label-select\">Personality</label>\n        <Field\n          className=\"form__control form__control-select\"\n          name={`players.${currentPlayer}.personality`}\n          id=\"formPersonality\"\n          as=\"select\"\n        >\n          <option value=\"DEFAULT\">Choose...</option>\n          <option value={60}>Introvert</option>\n          <option value={31}>Extrovert</option>\n        </Field>\n      </div>\n      <div className=\"form__row\">\n        <label className=\"item__label item__label-select\">Hair</label>\n        <Field\n          className=\"form__control form__control-select\"\n          name={`players.${currentPlayer}.hair`}\n          id=\"formHair\"\n          as=\"select\"\n        >\n          <option value=\"DEFAULT\">Choose...</option>\n          <option value={10}>Curly</option>\n          <option value={18}>Straight</option>\n          <option value={25}>Wavy</option>\n        </Field>\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nimport { Field } from \"formik\";\n\nexport const FormThree = ({ currentPlayer }) => {\n  return (\n    <>\n      <div className=\"form__row\">\n        <label className=\"item__label item__label-select\">Relationship to Money</label>\n        <Field\n          className=\"form__control form__control-select\"\n          name={`players.${currentPlayer}.money`}\n          id=\"formMoney\"\n          as=\"select\"\n        >\n          <option value=\"DEFAULT\">Choose...</option>\n          <option value={0}>Miserly</option>\n          <option value={2}>Spend-thrift</option>\n          <option value={1}>What's mine is yours</option>\n          <option value={3}>Frugal</option>\n        </Field>\n      </div>\n      <div className=\"form__row\">\n        <label className=\"item__label item__label-select\">Relationship to Food</label>\n        <Field\n          className=\"form__control form__control-select\"\n          name={`players.${currentPlayer}.food`}\n          id=\"formFood\"\n          as=\"select\"\n        >\n          <option value=\"DEFAULT\">Choose...</option>\n          <option value={45}>I will try anything</option>\n          <option value={135}>A foodie</option>\n          <option value={45}>See it, Eat it</option>\n          <option value={270}>A picky eater</option>\n        </Field>\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nimport { Field } from \"formik\";\n\nexport const FormFour = ({ currentPlayer }) => {\n  return (\n    <>\n      <div className=\"form__row\">\n        <label className=\"item__label item__label-select\">Relationship to Nature</label>\n        <Field\n          className=\"form__control form__control-select\"\n          name={`players.${currentPlayer}.nature`}\n          id=\"formNature\"\n          as=\"select\"\n        >\n          <option value=\"DEFAULT\">Choose...</option>\n          <option value=\"hollow\">Video Gamer</option>\n          <option value=\"stroke\">Happy on the porch</option>\n          <option value=\"ring\">Nature Lover</option>\n          <option value=\"dot\">Climate activist</option>\n        </Field>\n      </div>\n      <div className=\"form__row\">\n        <label className=\"item__label item__label-select\">Relationship to Social Media</label>\n        <Field\n          className=\"form__control form__control-select\"\n          name={`players.${currentPlayer}.media`}\n          id=\"formMedia\"\n          as=\"select\"\n        >\n          <option value=\"DEFAULT\">Choose...</option>\n          <option value=\"thinner\">What is social media</option>\n          <option value=\"thicker\">Lurker</option>\n          <option value=\"thin\">Regular poster</option>\n          <option value=\"thick\">Influencer</option>\n        </Field>\n      </div>\n      <div className=\"form__row\">\n        <label className=\"item__label item__label-select\">Relationship to Progress</label>\n        <Field\n          className=\"form__control form__control-select\"\n          name={`players.${currentPlayer}.progress`}\n          id=\"formProgress\"\n          as=\"select\"\n        >\n          <option value=\"DEFAULT\">Choose...</option>\n          <option value=\"complimentary\">Curmudgeon</option>\n          <option value=\"triadic\">C'est Le Vie</option>\n          <option value=\"monochromatic\">Reluctant Participant</option>\n          <option value=\"analogous\">Activist</option>\n        </Field>\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nimport { Field } from \"formik\";\n\nexport const FormFive = ({ currentPlayer }) => {\n  return (\n    <>\n      <div className=\"form__row\">\n        <label className=\"item__label item__label-select\">Relationship to Religion</label>\n        <Field\n          className=\"form__control form__control-select\"\n          name={`players.${currentPlayer}.religion`}\n          id=\"formReligion\"\n          as=\"select\"\n        >\n          <option value=\"DEFAULT\">Choose...</option>\n          <option value=\"solid\">Practitioner</option>\n          <option value=\"round\">Agnostic</option>\n          <option value=\"dotted\">God-fearing</option>\n          <option value=\"uneven\">Wiccin</option>\n          <option value=\"dashed\">Undecided</option>\n        </Field>\n      </div>\n      <div className=\"form__row\">\n        <label className=\"item__label item__label-select\">Relationship to Culture</label>\n        <Field\n          className=\"form__control form__control-select\"\n          name={`players.${currentPlayer}.culture`}\n          id=\"formCulture\"\n          as=\"select\"\n        >\n          <option value=\"DEFAULT\">Choose...</option>\n          <option value={1}>People Magazine reader</option>\n          <option value={2}>Netflix binger</option>\n          <option value={3}>Museum attendee</option>\n          <option value={4}>Cultural practitioner</option>\n        </Field>\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nimport { Field } from \"formik\";\n\nexport const FormSix = ({ currentPlayer }) => {\n  return (\n    <>\n      <div className=\"form__row\">\n        <label className=\"item__label item__label-select\">Choose a Color</label>\n        <Field\n          className=\"form__control form__control-select\"\n          name={`players.${currentPlayer}.color`}\n          id=\"formColor\"\n          as=\"select\"\n        >\n          <option value=\"DEFAULT\">Choose...</option>\n          <option value=\"chartreuse\">Chartreuse</option>\n          <option value=\"vermilion\">Vermilion</option>\n          <option value=\"cobalt\">Cobalt</option>\n          <option value=\"teal\">Teal</option>\n          <option value=\"kellyGreen\">Kelly Green</option>\n          <option value=\"aubergine\">Aubergine</option>\n        </Field>\n      </div>\n    </>\n  );\n};\n","const required = (value) => (value || typeof value === \"number\" ? undefined : \"Required\");\nconst maxValue = (value) => (value && value > 120 ? \"Are you really over 120 years old?!\" : undefined);\nconst minValue = (value) => (value && value > 0 ? undefined : \"Numbers need to be greater than 0 :)\");\nconst number = (value) => (value && isNaN(Number(value)) ? \"Must be a number\" : undefined);\nconst maxLength = (value) =>\n  value && value.length > 15 ? \"Unfortunately names must be under 15 characters long\" : undefined;\n\nexport const validateNumber = (value) => {\n  return required(value) || number(value) || maxValue(value) || minValue(value);\n}\n\nexport const validateString = (value) => {\n  return required(value) || maxLength(value)\n}","import React from \"react\";\nimport { Field, FieldArray } from \"formik\";\nimport { validateString, validateNumber } from \"../../utils/validators\";\nimport { responseSchema } from \"../../utils\";\n\n// Create the inputs for each player field\nconst renderField = ({ index, field, form, label, placeholder, ...props }) => {\n  return (\n    <>\n      <label className=\"item__label\">{label}</label>\n      <input {...field} {...props} placeholder={placeholder || label + \"...\"} />\n    </>\n  );\n};\n\nexport const PlayerForm = ({ values }) => {\n  console.log(values);\n  return (\n    <>\n      <div className=\"form__row\">\n        <div className=\"form__item form__item-interest\">\n          <label className=\"item__label item__label-interest\">Common Interest</label>\n          <Field\n            className={`form__control form__control-input ${1 === 2 ? \"form__control-invalid\" : \"\"}`}\n            id=\"commonInterest\"\n            name=\"interest\"\n            component=\"input\"\n            type=\"text\"\n            placeholder=\"Common interest...\"\n            validate={validateString}\n          />\n        </div>\n      </div>\n      <FieldArray\n        name=\"players\"\n        render={({ remove, push }) => (\n          <>\n            {values.players.map((player, index) => (\n              <div key={`player_${index}`} className=\"form__row\">\n                <div className=\"form__item\">\n                  <div className=\"item__name\">Player #{index + 1}</div>\n                  <button className=\"item__removeCTA\" type=\"button\" title=\"Remove Player\" onClick={() => remove(index)}>\n                    Remove\n                  </button>\n                </div>\n                <div className=\"form__item\">\n                  <Field\n                    className={`form__control form__control-input ${1 === 2 ? \"form__control-invalid\" : \"\"}`}\n                    name={`players.${index}.name`}\n                    type=\"text\"\n                    component={renderField}\n                    label=\"Name\"\n                    validate={validateString}\n                    index={index}\n                  />\n                </div>\n                <div className=\"form__item\">\n                  <Field\n                    className={`form__control form__control-input ${1 === 2 ? \"form__control-invalid\" : \"\"}`}\n                    name={`players.${index}.association`}\n                    type=\"text\"\n                    component={renderField}\n                    label={\"Association\"}\n                    validate={validateNumber}\n                  />\n                </div>\n              </div>\n            ))}\n            <div className=\"form__row\">\n              <div className={`form__item form__item-addCTA ${values.players.length === 5 ? \"invisible\" : \"\"}`}>\n                <button className=\"p-button p-button__add\" type=\"button\" onClick={() => push(responseSchema)}>\n                  Add Player\n                </button>\n              </div>\n            </div>\n          </>\n        )}\n      />\n    </>\n  );\n};\n"],"sourceRoot":""}