{"version":3,"sources":["lib/userForms/index.js","lib/circles/DefaultCircle.jsx","lib/circles/DotCircle.jsx","lib/circles/HollowCircle.jsx","lib/circles/RingCircle.jsx","lib/circles/StrokeCircle.jsx","utils/circleUtilities.js","utils/createHeaderIcons.js","utils/handleGridUpdate.js","utils/api.js","components/Header/Header.jsx","components/Header/HeaderIcon.jsx","lib/buttons/NextButton.jsx","lib/buttons/PreviousButton.jsx","lib/buttons/StartButton.jsx","components/Landing/Landing.jsx","components/FormSwitch/FormSwitch.jsx","components/PanelButtonRow/PanelButtonRow.jsx","components/FormDisplay/NextForm.jsx","components/FormHeading/FormHeading.jsx","components/FormDisplay/FormDisplay.jsx","redux/types.js","components/FormContainer/FormContainer.jsx","redux/actions/gameActions.js","lib/instructions.js","components/Panel/Panel.jsx","components/PolarGrid/PolarGrid.jsx","components/CircleDisplay/CircleDisplay.jsx","components/Canvas/components/DisplaySvg.jsx","components/Canvas/Canvas.jsx","utils/debounce.js","App.jsx","redux/reducers/gameReducer.js","redux/reducers/index.js","store.js","index.js","lib/userForms/FormOne.jsx","lib/userForms/FormTwo.jsx","lib/userForms/FormThree.jsx","lib/userForms/FormFour.jsx","lib/userForms/FormFive.jsx","lib/userForms/FormSix.jsx","utils/validators.js","lib/userForms/PlayerForm.jsx"],"names":["DefaultCircle","id","playerCircle","centerPoint","isInit","createPathAndAnimation","path","animation","console","log","createRadialGradient","hue","saturation","lightness","createLinearPath","xCartesian","yCartesian","radius","d","style","fill","opacity","fillRule","stroke","strokeLinecap","DotCircle","lineDesign","href","secondaryColor","strokeWidth","designThickness","HollowCircle","color","RingCircle","innerPath","outerPath","innerRadius","outerRadius","isAnimated","dur","repeatCount","circlePathTemplate","StrokeCircle","offset","stopColor","stopOpacity","x","y","r","cx","cy","createCircleDesign","playerId","playerCircleData","design","info","handleGridUpdate","view","currentMultiplier","newMultiplier","height","width","oldWidth","oldHeight","parseFloat","toFixed","svgDim","Math","round","axis","cross","resizeRatio","grid","step","api","axios","create","baseURL","Header","currentForm","displayHeaderText","displayHeaderIcons","map","formName","i","className","isActive","createHeaderIcons","data-testid","HeaderIcon","PeopleAltOutlined","FingerprintOutlined","WatchOutlined","PublicOutlined","ShoppingCartOutlined","LocalFloristOutlined","PaletteOutlined","NextButton","nextText","type","PreviousButton","prevText","handlePrevious","onClick","StartButton","startGame","Landing","FormSwitch","form","values","formProps","PanelButtonRow","NextForm","FormHeading","currentPlayer","numPlayers","players","formTabs","push","name","FormDisplay","onSubmit","initialValues","actions","props","START_GAME","END_GAME","NEXT_FORM","PREV_FORM","RESET_FORM","UPDATE_PLAYER","INITIALIZE_GAME","UPDATE_DISPLAY_GRID","UPDATE_VIEW","RESIZE_PLAYER_CIRCLES","NEXT_PLAYER","PREV_PLAYER","UPDATE_PLAYER_CIRCLE","FINAL_DISPLAY","formResponseSchema","interest","association","age","diet","gender","time","personality","hair","food","money","nature","media","progress","religion","culture","connect","gameState","canvasDisplay","gameId","session","updatePlayer","playerIndex","formData","dispatch","getState","a","patch","_id","responses","updateStep","data","error","alert","message","payload","circleSVG","circleData","circles","nextPlayer","prevPlayer","nextForm","newForm","length","prevForm","endGame","updatePlayerCircle","player","initializeGame","post","game","finalDisplay","allPlayerCircles","initialCircleData","finalCircles","displayGrid","handleSubmit","resetForm","playerIds","success","formInstructions","0","1","2","3","4","5","6","7","8","9","10","inProgress","display","panelText","panelTextFormat","split","line","PolarGrid","svgRadius","ringSpacing","xStartPoint","radian","theta","cos","yStartPoint","sin","xEndPoint","yEndPoint","createRings","PI","createLongLines","createMediumLines","createShortLines","createFullLines","CircleDisplay","playerCircles","resizeCircles","resizeAllCircles","circle","updateGridDisplay","updatedGrid","resizePlayerCircles","useEffect","asyncGridUpdate","updateView","dimensions","displaySVG","useRef","current","scrollHeight","scrollWidth","asyncUpdate","debounceHandleResize","callback","wait","timeoutID","args","window","clearTimeout","setTimeout","apply","debounce","addEventListener","_","removeEventListener","ref","App","INITIAL_STATE","updateCircles","complete","stage","combineReducers","state","action","updatedPlayerCircle","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","querySelector","FormOne","as","value","FormTwo","FormThree","FormFour","FormFive","FormSix","required","undefined","validateNumber","isNaN","Number","number","maxValue","minValue","validateString","maxLength","renderField","index","field","label","placeholder","PlayerForm","component","validate","arrayHelpers","title","remove"],"mappings":"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","file":"static/js/main.6b6859c3.chunk.js","sourcesContent":["export * from \"./PlayerForm\";\nexport * from \"./InterestForm\";\nexport * from \"./FormOne\";\nexport * from \"./FormTwo\";\nexport * from \"./FormThree\";\nexport * from \"./FormFour\";\nexport * from \"./FormFive\";\nexport * from \"./FormSix\";\n","/* IMPORTS */\nimport React from \"react\";\nimport { createLinearPath, createRadialGradient, createPathAndAnimation } from \"../../utils\";\n/* ------ */\n\nexport const DefaultCircle = ({ id, playerCircle, centerPoint, isInit }) => {\n  const { path, animation } = createPathAndAnimation(playerCircle, id);\n  console.log(playerCircle)\n  return (\n    <>\n      <defs>\n        {createRadialGradient(id, centerPoint, playerCircle.hue, playerCircle.saturation, playerCircle.lightness)}\n        {createLinearPath(id, centerPoint, playerCircle.xCartesian, playerCircle.yCartesian, playerCircle.radius, null)}\n      </defs>\n      <path\n        id={`circle_${id}${isInit ? \"_init\" : \"\"}`}\n        key={`circle_${id}${isInit ? \"_init\" : \"\"}`}\n        d={path}\n        style={{\n          fill: `url(#radialGradient${id})`,\n          opacity: `${isInit ? 0.2 : 1}`,\n          fillRule: \"evenodd\",\n          stroke: \"none\",\n          strokeLinecap: \"round\",\n        }}\n      >\n        {animation}\n      </path>\n    </>\n  );\n};\n","/* IMPORTS */\nimport React from \"react\";\nimport { createLinearPath, createRadialGradient, createPathAndAnimation } from \"../../utils\";\n/* ------ */\n\nexport const DotCircle = ({ id, playerCircle, centerPoint }) => {\n  const { path, animation } = createPathAndAnimation(playerCircle, id);\n  return (\n    <>\n      <defs>\n        {createRadialGradient(id, centerPoint, playerCircle.hue, playerCircle.saturation, playerCircle.lightness)}\n        {createLinearPath(\n          id,\n          centerPoint,\n          playerCircle.xCartesian,\n          playerCircle.yCartesian,\n          playerCircle.radius,\n          playerCircle.lineDesign\n        )}\n      </defs>\n      {playerCircle.lineDesign ? <use href={`#linearPath${id}`} /> : null}\n      <path\n        id={`circle_${id}`}\n        key={`circle_${id}`}\n        d={path}\n        style={{\n          fill: playerCircle.secondaryColor,\n          opacity: 1,\n          fillRule: \"evenodd\",\n          stroke: `url(#radialGradient${id})`,\n          strokeWidth: playerCircle.designThickness,\n        }}\n      >\n        {animation}\n      </path>\n    </>\n  );\n};\n","/* IMPORTS */\nimport React from \"react\";\nimport { createLinearPath, createRadialGradient, createPathAndAnimation } from \"../../utils\";\n/* ------ */\n\nexport const HollowCircle = ({ id, playerCircle, centerPoint }) => {\n  const { path, animation } = createPathAndAnimation(playerCircle, id);\n  return (\n    <>\n      <defs>\n        {createRadialGradient(id, centerPoint, playerCircle.hue, playerCircle.saturation, playerCircle.lightness)}\n        {createLinearPath(\n          id,\n          centerPoint,\n          playerCircle.xCartesian,\n          playerCircle.yCartesian,\n          playerCircle.radius,\n          playerCircle.lineDesign\n        )}\n      </defs>\n      {playerCircle.lineDesign ? <use href={`#linearPath${id}`} /> : null}\n      <path\n        id={`circle_${id}`}\n        key={`circle_${id}`}\n        d={path}\n        strokeWidth={playerCircle.designThickness}\n        stroke={playerCircle.color}\n        fill=\"none\"\n      >\n        {animation}\n      </path>\n    </>\n  );\n};\n","/* IMPORTS */\nimport React from \"react\";\nimport { createLinearPath, createRadialGradient, circlePathTemplate } from \"../../utils\";\n/* ------ */\n\nexport const RingCircle = ({ id, playerCircle, centerPoint }) => {\n  let animation, innerPath, outerPath;\n  const innerRadius = playerCircle.radius - 2 * playerCircle.designThickness;\n  const outerRadius = playerCircle.radius - 0.5 * playerCircle.designThickness;\n  if (playerCircle.isAnimated) {\n    animation = (\n      <animateMotion dur=\"10s\" repeatCount=\"indefinite\">\n        <mpath href={`#linearPath${id}`} />\n      </animateMotion>\n    );\n    innerPath = circlePathTemplate(0, 0, innerRadius);\n    outerPath = circlePathTemplate(0, 0, outerRadius);\n  } else {\n    animation = null;\n    innerPath = circlePathTemplate(playerCircle.xCartesian, playerCircle.yCartesian, innerRadius);\n    outerPath = circlePathTemplate(playerCircle.xCartesian, playerCircle.yCartesian, outerRadius);\n  }\n\n  return (\n    <>\n      <defs>\n        {createRadialGradient(id, centerPoint, playerCircle.hue, playerCircle.saturation, playerCircle.lightness)}\n        {createLinearPath(\n          id,\n          centerPoint,\n          playerCircle.xCartesian,\n          playerCircle.yCartesian,\n          playerCircle.radius,\n          playerCircle.lineDesign\n        )}\n      </defs>\n      {playerCircle.lineDesign ? <use href={`#linearPath${id}`} /> : null}\n      <g id={`circle_${id}`}>\n        <path\n          key={`circle_${id}_inner`}\n          d={innerPath}\n          style={{\n            fill: `url(#radialGradient${id})`,\n            opacity: 1,\n            fillRule: \"evenodd\",\n            strokeLinecap: \"round\",\n          }}\n        />\n        <path\n          key={`circle_${id}_outer`}\n          d={outerPath}\n          strokeWidth={playerCircle.designThickness}\n          stroke={playerCircle.secondaryColor}\n          fill=\"none\"\n        />\n        {animation}\n      </g>\n    </>\n  );\n};\n","/* IMPORTS */\nimport React from \"react\";\nimport { createLinearPath, createRadialGradient, createPathAndAnimation } from \"../../utils\";\n/* ------ */\n\nexport const StrokeCircle = ({ id, playerCircle, centerPoint }) => {\n  const { path, animation } = createPathAndAnimation(playerCircle, id);\n\n  return (\n    <>\n      <defs>\n        {createRadialGradient(id, centerPoint, playerCircle.hue, playerCircle.saturation, playerCircle.lightness)}\n        {createLinearPath(\n          id,\n          centerPoint,\n          playerCircle.xCartesian,\n          playerCircle.yCartesian,\n          playerCircle.radius,\n          playerCircle.lineDesign\n        )}\n      </defs>\n      {playerCircle.lineDesign ? <use href={`#linearPath${id}`} /> : null}\n      <path\n        id={`circle_${id}`}\n        key={`circle_${id}`}\n        d={path}\n        strokeWidth={playerCircle.designThickness}\n        stroke={playerCircle.secondaryColor}\n        style={{\n          fill: `url(#radialGradient${id})`,\n          opacity: 1,\n          fillRule: \"evenodd\",\n          strokeLinecap: \"round\",\n        }}\n      >\n        {animation}\n      </path>\n    </>\n  );\n};\n","import React from \"react\";\nimport {DefaultCircle, DotCircle, HollowCircle, RingCircle, StrokeCircle} from \"../lib/circles\";\n\n/**\n * Function that draws the player circles\n * @function drawPlayerCircles\n * @param {players[]} players -- Array of player objects\n * @param {number} currentForm -- Current form\n * @return {players[]} Array of player objects with newly created circleSVGs\n */\nfunction rerenderCircles(players, currentForm) {\n  console.log(\"rerender ran\", currentForm);\n  if (currentForm <= 7) {\n    return Object.keys(players).map((playerKey) => {\n      return players[playerKey].circleSVG;\n    });\n  }\n  const allCircles = [];\n  players.forEach((player) => {\n    allCircles.push(player.circleSVG, player.initialCircleSVG);\n  });\n  console.log(allCircles);\n  return allCircles;\n}\n\n/**\n * Alter the size of the circles if the browser window resizes\n * @param {object} players\n * @param {object} display\n */\nfunction resizeAllCircles(playerCircles, resizeRatio) {\n  const toResize = ['radius', 'xCartesian', 'yCartesian']\n  console.log(\"resize all circles\");\n  console.log(playerCircles, resizeRatio);\n  // playerCircles.forEach(playerCircle => {\n  //   console.log(playerCircle)\n  //   console.log(playerCircle.props.playerCircle)\n  //   for (const circleData in playerCircle.props.playerCircle) {\n  //     console.log(`${circleData}: ${playerCircle.props.playerCircle[circleData]}`)\n  //     if (toResize.includes(circleData)) {\n  //       playerCircle[circleData] = playerCircle[circleData] * resizeRatio\n  //     }\n  //   }\n  //\n  // })\n  // for (const circle of playerCircles) {\n  //   const playerCircleData = playerCircles[circle];\n  //   for (const data of playerCircleData) {\n  //     playerCircleData[data] = playerCircleData[data] * resizeRatio;\n  //   }\n  // }\n  console.log(playerCircles)\n  return playerCircles\n}\n\n/**\n * Creates the playerCircle's radial gradient\n * @function createRadialGradient\n * @param {number} hue -- playerCircle's hue\n * @param {number} saturation -- playerCircle's saturation\n * @param {number} lightness -- playerCircle's lightness\n * @param {number} id -- playerCircle's player id\n * @param {Object} centerPoint -- display grid's center position along x and y axis\n * @returns {JSX.Element} <radialGradient />\n * */\nfunction createRadialGradient(id, centerPoint, hue, saturation, lightness) {\n  return (\n    <radialGradient id={`radialGradient${id}`}>\n      <stop offset=\"0%\" stopColor={`hsl(${hue}, ${saturation}%, ${lightness * 1.60}%`} stopOpacity={1} />\n      <stop offset=\"25%\" stopColor={`hsl(${hue}, ${saturation}%, ${lightness * 1.45}%`} stopOpacity={1} />\n      <stop offset=\"50%\" stopColor={`hsl(${hue}, ${saturation}%, ${lightness * 1.30}%`} stopOpacity={1} />\n      <stop offset=\"75%\" stopColor={`hsl(${hue}, ${saturation}%, ${lightness * 1.15}%`} stopOpacity={1} />\n      <stop offset=\"100%\" stopColor={`hsl(${hue}, ${saturation}%, ${lightness}%`} stopOpacity={1} />\n    </radialGradient>\n  );\n}\n\n/**\n * Creates the animation path for the player's circle\n * @param {number} id -- playerCircle's player id\n * @param {Object} centerPoint -- display grid's center position along x and y axis\n * @param {number} x -- playerCircle's x location\n * @param {number} y - playerCircle's y location\n * @param {number} r -- playerCircle's radius\n * @param {Object} lineDesign -- playerCircle's stroke properties\n * @returns {JSX.Element} <path />\n */\nfunction createLinearPath(id, centerPoint, x, y, r, lineDesign) {\n  if (lineDesign !== null) {\n    return (\n      <path\n        id={`linearPath${id}`}\n        d={`m${x},${y} L${centerPoint.x},${centerPoint.y} ${x},${y}`}\n        style={{ ...lineDesign }}\n      />\n    );\n  }\n\n  return <path id={`linearPath${id}`} d={`m${x},${y} L${centerPoint.x},${centerPoint.y} ${x},${y}`} />;\n}\n\n/**\n * Creates the circle path based on player's playerCircleData\n * @param cx {number}\n * @param cy {number}\n * @param r {number}\n * @returns {string}\n */\nfunction circlePathTemplate(cx, cy, r) {\n  return `M ${cx} ${cy} m -${r}, 0 a ${r},${r} 0 1,0 ${r * 2},0 a ${r},${r} 0 1,0 -${r * 2},0 `;\n}\n\n/**\n * Creates the path and adds animation if .isAnimated === true\n * @param {object} playerCircle\n * @param {string} id\n * @returns {{path: string, animation: JSX.Element}}\n */\nfunction createPathAndAnimation(playerCircle, id) {\n  let path;\n  let animation;\n\n  if (playerCircle.isAnimated) {\n    animation = (\n      <animateMotion dur=\"10s\" repeatCount=\"indefinite\">\n        <mpath href={`#linearPath${id}`} />\n      </animateMotion>\n    );\n    path = circlePathTemplate(0, 0, playerCircle.radius);\n  } else {\n    animation = null;\n    path = circlePathTemplate(playerCircle.xCartesian, playerCircle.yCartesian, playerCircle.radius);\n  }\n\n  return { path, animation };\n}\n\n/**\n * Alters the animation path for the player's circle\n * @param {number} x -- playerCircle's x location\n * @param {number} y - playerCircle's y location\n * @param {number} r -- playerCircle's radius\n * @param {number} id -- playerCircle's player id\n * @param {Object} centerPoint -- display grid's center position along x and y axis\n * @returns {JSX.Element} <path />\n */\nfunction createEssPath(x, y, r, id, centerPoint) {\n  return (\n    <path\n      id={`essPath${id}`}\n      d={`m${x},${y} Q ${1},${1} ${centerPoint.x} ${centerPoint.y}`}\n      stroke=\"grey\"\n      strokeWidth=\"2px\"\n    />\n  );\n}\n\n/**\n * Creates the complex SVG design for each playerCircle\n * @param {string} playerId -- Player ID\n * @param {Object} playerCircleData -- Player circle object\n * @param {Object} centerPoint -- display grid's center position along x and y axis\n * @returns {JSX.Element}\n */\nfunction createCircleDesign(playerId, playerCircleData, centerPoint) {\n  console.log(\"[playerCircleData]: \", playerCircleData)\n\n  switch (playerCircleData.design) {\n    case \"initialCircle\": {\n      return <DefaultCircle id={playerId} playerCircle={playerCircleData} centerPoint={centerPoint} isInit={true} />;\n    }\n    case \"defaultCircle\":\n      return (\n        <DefaultCircle id={playerId} playerCircle={playerCircleData} centerPoint={centerPoint} isInit={false} />\n      );\n    case \"hollow\":\n      return <HollowCircle id={playerId} playerCircle={playerCircleData} centerPoint={centerPoint} />;\n    case \"stroke\":\n      return <StrokeCircle id={playerId} playerCircle={playerCircleData} centerPoint={centerPoint} />;\n    case \"ring\":\n      return <RingCircle id={playerId} playerCircle={playerCircleData} centerPoint={centerPoint} />;\n    case \"dot\":\n      return <DotCircle id={playerId} playerCircle={playerCircleData} centerPoint={centerPoint} />;\n    default:\n      console.info(\"%c[ERROR]: Switch - createCircleDesign\", \"color: red\");\n  }\n}\n\n\n/* Export necessary pieces */\nexport {\n  rerenderCircles,\n  resizeAllCircles,\n  circlePathTemplate,\n  createPathAndAnimation,\n  createRadialGradient,\n  createLinearPath,\n  createEssPath,\n  createCircleDesign\n};\n","import {HeaderIcon} from \"../components/Header\";\nimport React from \"react\";\n\nexport const createHeaderIcons = (currentForm) => {\n  const formNames = [\"Participants\", \"Personal\", \"Mental\", \"Financial\", \"Natural\", \"Cultural\", \"Visual\"];\n  return formNames.map((formName, i) => {\n    return i === currentForm - 1 ? (\n      <div key={`${formName}-active`} className=\"icon__container\">\n        <HeaderIcon formName={formName} isActive={true} />\n      </div>\n    ) : (\n      <div key={`${formName}`} className=\"icon__container\">\n        <HeaderIcon formName={formName} isActive={false} />\n      </div>\n    );\n  });\n};","export const handleGridUpdate = (view, currentMultiplier) => {\n  const { height, width, oldHeight, oldWidth } = view;\n  let newMultiplier;\n  if (view.oldHeight !== 0 || view.oldWidth !== 0) {\n    newMultiplier = parseFloat((width / oldWidth).toFixed(4));\n  } else {\n    newMultiplier = currentMultiplier;\n  }\n\n  console.log(\"multiplier\", newMultiplier);\n  const svgDim = height > width ? Math.round(height) : Math.round(width);\n  const radius = height < width ? Math.round(height / 2) : Math.round(width / 2);\n  const axis = parseFloat((radius * 1.1).toFixed(4));\n  const cross = parseFloat((radius * 0.75).toFixed(4));\n  const cy = parseFloat((height / 2).toFixed(4));\n  const cx = parseFloat((width / 2).toFixed(4));\n  const step = parseFloat((radius / 16).toFixed(4));\n\n  return {\n    resizeRatio: newMultiplier,\n    grid: {\n      svgDim,\n      radius,\n      axis,\n      cross,\n      cx,\n      cy,\n      step,\n    },\n  };\n};","import axios from \"axios\";\nexport const api = axios.create({\n  baseURL:\n    process.env.NODE_ENV === \"production\"\n      ? \"\"\n      : \"http://localhost:5500\",\n});","import React from \"react\";\nimport { createHeaderIcons } from \"../../utils\";\nimport \"./header.css\";\n\nconst Header = ({ currentForm }) => {\n  const displayHeaderText = currentForm > 0 ? null : <></>;\n  const displayHeaderIcons = currentForm > 0 ? createHeaderIcons(currentForm) : null;\n  return (\n    <div className=\"header\" data-testid=\"component-Header\">\n      <h1 className=\"header__title\">\n        Spherical <br />\n        Impressions\n      </h1>\n      <h3 className=\"header__text\">{displayHeaderText}</h3>\n      <div className=\"header__icons\">{displayHeaderIcons}</div>\n    </div>\n  );\n};\n\nexport default Header;\n","/* IMPORTS */\nimport React from \"react\";\nimport {\n  FingerprintOutlined,\n  LocalFloristOutlined,\n  PaletteOutlined,\n  PeopleAltOutlined,\n  PublicOutlined,\n  ShoppingCartOutlined,\n  WatchOutlined,\n} from \"@material-ui/icons\";\n/* ------ */\n\nexport const HeaderIcon = ({ formName, isActive }) => {\n  switch (formName) {\n    case \"Participants\":\n      return <PeopleAltOutlined className={`header__icon ${isActive ? \"header__icon-active\" : \"\"}`} />;\n    case \"Personal\":\n      return <FingerprintOutlined className={`header__icon ${isActive ? \"header__icon-active\" : \"\"}`} />;\n    case \"Mental\":\n      return <WatchOutlined className={`header__icon ${isActive ? \"header__icon-active\" : \"\"}`} />;\n    case \"Financial\":\n      return <PublicOutlined className={`header__icon ${isActive ? \"header__icon-active\" : \"\"}`} />;\n    case \"Natural\":\n      return <ShoppingCartOutlined className={`header__icon ${isActive ? \"header__icon-active\" : \"\"}`} />;\n    case \"Cultural\":\n      return <LocalFloristOutlined className={`header__icon ${isActive ? \"header__icon-active\" : \"\"}`} />;\n    case \"Visual\":\n      return <PaletteOutlined className={`header__icon ${isActive ? \"header__icon-active\" : \"\"}`} />;\n    default:\n      console.log(\"HeaderIcon switch has failed\");\n  }\n};\n","/* IMPORTS */\nimport React from \"react\";\n/* ------ */\n\nexport const NextButton = ({ nextText }) => {\n  return (\n    <button type=\"submit\" className={`p-button p-button__game p-button__game_next `} id=\"nextButton\">\n      <span>{nextText}</span>\n    </button>\n  );\n};\n","/* IMPORTS */\nimport React from \"react\";\n/* ------ */\n\nexport const PreviousButton = ({ prevText, handlePrevious }) => {\n  return (\n    <button\n      className=\"p-button p-button__game p-button__game_prev\"\n      id=\"prevButton\"\n      type=\"button\"\n      onClick={() => handlePrevious()}\n    >\n      <span>{prevText}</span>\n    </button>\n  );\n};\n","import React from \"react\";\n\nexport const StartButton = ({ startGame }) => {\n  return (\n    <button className=\"p-button p-button__start\" onClick={() => startGame()} data-testid=\"button-StartButton\">\n      <span>\n        Begin <br /> Game\n      </span>\n    </button>\n  );\n};\n","import { StartButton } from \"../../lib/buttons\";\nimport React from \"react\";\nimport \"./landing.css\";\n\nexport const Landing = ({ startGame }) => {\n  return (\n    <div className=\"landing\">\n      {/*<p className=\"landing__text\">*/}\n      {/*  Circle Generator is the artistic brainchild of Carrie Crane. Moving through the sections of the game will create*/}\n      {/*  and alter a collection of circles based on your groups common interest and a variety of personality factors. By*/}\n      {/*  the end you will have unique visual of how the members of your group are connected to the common interest that*/}\n      {/*  brought you together.*/}\n      {/*</p>*/}\n      <StartButton startGame={startGame} />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { FormOne, FormTwo, FormThree, FormFour, FormFive, FormSix, PlayerForm } from \"../../lib/userForms\";\n\nconst FormSwitch = ({ form, values, formProps }) => {\n  switch (form) {\n    case 1:\n      return (\n        <PlayerForm values={values} formProps={formProps}/>\n      )\n    case 2:\n      return (\n          <FormOne values={values} formProps={formProps} />\n      );\n    case 3:\n      return (\n          <FormTwo values={values} formProps={formProps} />\n      );\n    case 4:\n      return (\n          <FormThree values={values} formProps={formProps} />\n      );\n    case 5:\n      return (\n          <FormFour values={values} formProps={formProps} />\n      );\n    case 6:\n      return (\n          <FormFive values={values} formProps={formProps} />\n      );\n    case 7:\n      return (\n          <FormSix values={values} formProps={formProps} />\n      );\n    case 8:\n      return <>hi</>;\n    default:\n      console.log(\"FormDisplay switch has failed\");\n  }\n};\n\nexport default FormSwitch;\n","import React from \"react\";\nimport { NextButton, PreviousButton } from \"../../lib/buttons\";\nimport \"./panelButtonRow.css\";\n\nexport const PanelButtonRow = ({ nextText, prevText, handlePrevious }) => {\n  return (\n    <div className=\"p-buttons__row\" data-testid=\"component-FormButtons\">\n      <div className=\"p-button__col\">\n        <PreviousButton prevText={prevText} handlePrevious={handlePrevious} />\n      </div>\n      <div className=\"p-button__col\">\n        <NextButton nextText={nextText} />\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const NextForm = () => {\n  return (\n    <div className=\"body__updateMessage\">\n      Click \"Next Form\"\n      <br/> to continue\n      <br/> or\n      <br/> go back\n      <br/> to change responses\n    </div>\n  )\n}","/* IMPORTS */\nimport React from \"react\";\nimport \"./formHeading.css\";\n/* ------ */\n\nexport const FormHeading = ({ currentPlayer, numPlayers, players }) => {\n  let formTabs = [];\n  if (numPlayers === 0) {\n\n  }\n  for (let i = 0; i < numPlayers; i++) {\n    formTabs.push(\n      <div\n        key={`${players[i].name}_${i}`}\n        className={`heading__tab ${i === currentPlayer ? \"heading__tab-active\" : \"\"}`}\n      >\n        {players[i].name}\n      </div>\n    );\n  }\n\n  return <div className=\"form__heading\">{formTabs}</div>;\n};\n","import React from \"react\";\nimport {Formik, Form} from 'formik'\nimport { FormSwitch } from \"../FormSwitch\";\nimport { PanelButtonRow } from \"../PanelButtonRow\";\nimport { NextForm } from \"./NextForm\";\nimport \"./formDisplay.css\";\nimport {FormHeading} from \"../FormHeading\";\n\nconst FormDisplay = ({\n  onSubmit,\n  initialValues,\n  handlePrevious,\n  currentForm,\n  currentPlayer,\n  numPlayers,\n  players\n}) => {\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={(values, actions) => onSubmit(values, actions)}\n      >\n        {\n          ({values, ...props}) => (\n            <>\n            <FormHeading currentPlayer={currentPlayer} numPlayers={numPlayers} players={players} />\n            <Form className=\"form form-signin mt-2\">\n              <div className={`form__group ${currentForm > 1 ? \"form__group-center\" : \"\"}`}>\n              {\n                currentPlayer !== numPlayers || currentForm < 2\n                ? <FormSwitch form={currentForm} currentPlayer={currentPlayer} values={values} formProps={props}/>\n                : <NextForm />\n              }\n              </div>\n              <div className=\"form__row form__row-buttons\">\n                <PanelButtonRow prevText={\"Back\"} nextText={\"Submit\"} handlePrevious={handlePrevious}/>\n              </div>\n            </Form>\n            </>\n          )\n        }\n      </Formik>\n    </>\n  )};\nexport default FormDisplay;\n","// Game Action Types\nexport const START_GAME = \"START_GAME\";\nexport const END_GAME = \"END_GAME\";\nexport const NEXT_FORM = \"NEXT_FORM\";\nexport const PREV_FORM = \"PREV_FORM\";\nexport const RESET_FORM = \"RESET_FORM\";\nexport const UPDATE_PLAYER = \"UPDATE_PLAYER\";\nexport const DISPLAY_CIRCLES = \"DISPLAY_CIRCLES\";\nexport const UPDATE_CIRCLES = \"UPDATE_CIRCLES\";\nexport const DISPLAY_GRID = \"DISPLAY_GRID\";\nexport const INITIALIZE_GROUP = \"INITIALIZE_GROUP\";\nexport const INITIALIZE_GAME = \"INITIALIZE_GAME\";\n\n// Display Action Types\nexport const UPDATE_DISPLAY_GRID = \"UPDATE_DISPLAY_GRID\";\nexport const UPDATE_VIEW = \"UPDATE_VIEW\";\nexport const RESIZE_PLAYER_CIRCLES = \"RESIZE_PLAYER_CIRCLES\";\n\n// Player Action Types\nexport const NEW_PLAYER = \"NEW_PLAYER\";\nexport const NEXT_PLAYER = \"NEXT_PLAYER\";\nexport const PREV_PLAYER = \"PREV_PLAYER\";\nexport const UPDATE_PLAYER_CIRCLE = \"UPDATE_PLAYER_CIRCLE\";\nexport const FINAL_DISPLAY = \"FINAL_DISPLAY\";\n","import React from \"react\";\nimport { FormDisplay } from \"../FormDisplay\";\nimport { connect } from \"react-redux\";\nimport {\n  endGame,\n  finalDisplay,\n  nextForm,\n  nextPlayer,\n  prevForm,\n  prevPlayer,\n  initializeGame,\n  updatePlayer,\n  updatePlayerCircle,\n} from \"../../redux/actions\";\n\n\nconst formResponseSchema = [\n  null,\n  {\n    interest: \"\",\n    players: [\n      {\n        name: \"\",\n        association: \"\"\n      },\n      {\n        name: \"\",\n        association: \"\"\n      }\n    ],\n  },\n  {\n    age: \"\",\n    diet: \"\",\n    gender: \"\",\n    height: \"\",\n    interest: \"\",\n  },\n  {\n    time: \"\",\n    personality: \"\",\n    hair: \"\",\n  },\n  {\n    food: \"\",\n    money: \"\",\n  },\n  {\n    nature: \"\",\n    media: \"\",\n    progress: \"\",\n  },\n  {\n    religion: \"\",\n    culture: \"\",\n  },\n  {\n    color: \"\",\n  }\n\n]\n\nconst FormContainer = ({\n  session,\n  gameId,\n  players,\n  updatePlayer,\n  updatePlayerCircle,\n  nextPlayer,\n  initializeGame,\n  prevPlayer,\n  nextForm,\n  prevForm,\n  endGame,\n  finalDisplay,\n}) => {\n  const { currentForm, currentPlayer, numPlayers } = session;\n\n  const handlePrevious = async () => {\n    if (currentForm === 1) {\n      await endGame();\n    } else if (currentPlayer === 0) {\n      await prevForm(currentForm);\n    } else {\n      await prevPlayer(currentPlayer);\n    }\n  };\n  const handleSubmit = async (values, actions) => {\n    if (currentForm === 1) {\n      await initializeGame(gameId, values);\n      await nextForm(currentForm);\n      actions.resetForm({\n        values: {\n          ...formResponseSchema[currentForm + 1]\n        }\n      });\n      return;\n    }\n    if (currentForm === 7 && currentPlayer === numPlayers) {\n      await finalDisplay(players);\n      await nextForm(currentForm);\n      return;\n    }\n    if (currentForm >= 2 && currentForm <= 7) {\n      if (currentPlayer < numPlayers) {\n        const success = await updatePlayer(currentPlayer, session.playerIds[currentPlayer], values, currentForm);\n        if (success) {\n          await nextPlayer(currentPlayer)\n        } else {\n          alert(success.error.message)\n        }\n        actions.resetForm({\n          values: {\n            ...formResponseSchema[currentForm]\n          }\n        });\n      } else {\n        await nextForm(currentForm);\n        actions.resetForm({\n          values: {\n            ...formResponseSchema[currentForm + 1]\n          }\n        });\n      }\n    }\n  };\n\n  return (\n    <div className=\"form__container\"\n    >\n      <FormDisplay\n        onSubmit={handleSubmit}\n        initialValues={formResponseSchema[currentForm]}\n        handlePrevious={handlePrevious}\n        currentForm={currentForm}\n        currentPlayer={currentPlayer}\n        numPlayers={numPlayers}\n        players={players}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ gameState }) => {\n  const { canvasDisplay, players, gameId, ...rest } = gameState;\n  return {\n    canvasDisplay,\n    players,\n    gameId,\n    session: rest,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updatePlayer,\n  nextPlayer,\n  prevPlayer,\n  nextForm,\n  prevForm,\n  endGame,\n  updatePlayerCircle,\n  initializeGame,\n  finalDisplay,\n})(FormContainer);\n\n\n\n","import {\n  START_GAME,\n  END_GAME,\n  NEXT_FORM,\n  PREV_FORM,\n  RESET_FORM,\n  UPDATE_PLAYER,\n  FINAL_DISPLAY,\n  INITIALIZE_GAME,\n  NEXT_PLAYER,\n  PREV_PLAYER,\n  UPDATE_PLAYER_CIRCLE,\n  RESIZE_PLAYER_CIRCLES,\n  UPDATE_VIEW,\n  UPDATE_DISPLAY_GRID,\n} from \"../types\";\nimport { createCircleDesign, handleGridUpdate } from \"../../utils\";\nimport { api } from \"../../utils\";\n\n/* ----   START_GAME ACTION CREATOR    ---- */\nexport const startGame = () => async (dispatch) => {\n  dispatch({\n    type: START_GAME,\n    payload: {\n      inProgress: true,\n      currentForm: 1,\n      displayGrid: true,\n      currentPlayer: 0,\n    },\n  });\n};\n/* ----   END_GAME ACTION CREATOR    ---- */\nexport const endGame = () => (dispatch) => {\n  dispatch({ type: END_GAME });\n};\n/* ----   CREATE_PLAYERS ACTION CREATOR    ---- */\nexport const initializeGame = (gameId, formData) => async (dispatch) => {\n  const { interest, players } = formData;\n  const { data } = await api.post(\"/games/initializeGame\", {interest, players})\n  dispatch({\n    type: INITIALIZE_GAME,\n    payload: { game: data.game, players: data.players },\n  });\n};\n/* ----   NEXT_PLAYER ACTION CREATOR    ---- */\nexport const nextPlayer = (currentPlayer) => (dispatch) => {\n  const newPlayer = currentPlayer + 1;\n  dispatch({\n    type: NEXT_PLAYER,\n    payload: { currentPlayer: newPlayer },\n  });\n};\n/* ----    PREV_PLAYER ACTION CREATOR    ---- */\nexport const prevPlayer = (currentPlayer) => (dispatch) => {\n  const newPlayer = currentPlayer - 1;\n  dispatch({\n    type: PREV_PLAYER,\n    payload: { currentPlayer: newPlayer },\n  });\n};\n/* ----    UPDATE_PLAYER ACTION CREATOR    ---- */\nexport const updatePlayer = (playerIndex, playerId, formData, currentForm) => async (dispatch, getState) => {\n  const { centerPoint } = getState().gameState\n  const {data: { data, error }} = await api.patch(\"/users/update\", {\n    centerPoint,\n    _id: playerId,\n    responses: formData,\n    updateStep: currentForm\n  })\n\n  if (error) {\n    await alert(error.message);\n    dispatch({\n      type: RESET_FORM,\n      payload: {currentPlayer: playerIndex}\n    });\n    return false;\n  }\n    console.log(\"data\", data)\n    const circleSVG = createCircleDesign(playerId,data.circleData, centerPoint)\n    console.log(circleSVG)\n    dispatch({\n      type: UPDATE_PLAYER,\n      payload: {\n        circleSVG,\n        circles: { ...data },\n        playerIndex,\n      },\n    });\n  return true;\n\n};\n/* ----    UPDATE_PLAYER_CIRCLE ACTION CREATOR    ---- */\nexport const updatePlayerCircle = (player, currentPlayer, currentForm) => async (dispatch, getState) => {\n  const { centerPoint } = getState().gameState;\n\n\n\n  return;\n  // dispatch({\n  //   type: UPDATE_PLAYER_CIRCLE,\n  //   payload: { currentPlayer, updatedPlayerCircle, updateCircles: true },\n  // });\n};\n/* ----    FINAL_DISPLAY ACTION CREATOR    ---- */\nexport const finalDisplay = (players) => (dispatch, getState) => {\n  const { circles, centerPoint} = getState().gameState\n  const allPlayerCircles = [...circles];\n  for (const player in players) {\n    console.log(player)\n    allPlayerCircles.push(createCircleDesign(player._id,players[player].initialCircleData, centerPoint));\n  };\n  console.log(allPlayerCircles)\n  dispatch({\n    type: FINAL_DISPLAY,\n    payload: { finalCircles: allPlayerCircles, displayGrid: false },\n  });\n};\n/* ----   NEXT_FORM ACTION CREATOR    ---- */\nexport const nextForm = (currentForm) => async (dispatch, getState) => {\n  const { players, currentPlayer } = getState().gameState;\n  const newForm = currentForm + 1;\n  const nextPlayer = players.length === 0 ? currentPlayer : 0;\n  await dispatch({\n    type: NEXT_FORM,\n    payload: { currentPlayer: nextPlayer, currentForm: newForm },\n  });\n};\n/* ----   PREV_FORM ACTION CREATOR    ---- */\nexport const prevForm = (currentForm) => async (dispatch, getState) => {\n  const { numPlayers } = getState().gameState;\n  const newForm = currentForm - 1;\n  await dispatch({\n    type: PREV_FORM,\n    payload: { currentForm: newForm, currentPlayer: numPlayers },\n  });\n};\n/* ----   RESIZE_PLAYER_CIRCLES ACTION CREATOR    ---- */\nexport const resizePlayerCircles = ({ cx, cy }) => (dispatch) => {\n  //TODO:\n  // find new way to resize circles\n  // return the new circles and correctly resize the display\n  // have alteration be constant after a resize until the next resize\n\n\n  console.log(\"hit\");\n  dispatch({\n    type: RESIZE_PLAYER_CIRCLES,\n    payload: { cx, cy },\n  });\n};\n/* ----   UPDATE_VIEW ACTION CREATOR    ---- */\nexport const updateView = (dimensions) => (dispatch) => {\n  dispatch({\n    type: UPDATE_VIEW,\n    payload: {\n      view: {\n        height: Math.round(dimensions.height),\n        width: Math.round(dimensions.width),\n      }\n    },\n  });\n};\n/* ----   UPDATE_DISPLAY_GRID ACTION CREATOR    ---- */\nexport const updateGridDisplay = (view) => async (dispatch, getState) => {\n  const resizeRatio = getState().gameState.canvasDisplay.resizeRatio;\n  const updatedGrid = await handleGridUpdate(view, resizeRatio);\n\n  dispatch({\n    type: UPDATE_DISPLAY_GRID,\n    payload: { ...updatedGrid, resizeCircles: true, },\n  });\n};\n","export const formInstructions = {\n  0: `Circle Generator is the artistic brainchild of Carrie Crane. Moving through the sections of the game will create and alter a collection of circles based on your groups common interest and a variety of personality factors. By the end you will have unique visual of how the members of your group are connected to the common interest that brought you together.`,\n  1: `Choose an interest or activity that connects your group. (event, hobby, career, etc).\\nEnter name and length of time associate with the common interest.\\nOnce each person has entered the information click 'Submit' to begin.`,\n  2: \"Choose the option that fits best.\\n(Options are meant to be humorous and should not be taken seriously)\",\n  3: \"Choose the option that fits best.\\n(Options are meant to be humorous and should not be taken seriously)\",\n  4: \"Choose the option that fits best.\\n(Options are meant to be humorous and should not be taken seriously)\",\n  5: \"Choose the option that fits best.\\n(Options are meant to be humorous and should not be taken seriously)\",\n  6: \"Choose the option that fits best.\\n(Options are meant to be humorous and should not be taken seriously)\",\n  7: \"Choose the option that fits best.\\n(Options are meant to be humorous and should not be taken seriously)\",\n  8: \"Choose the option that fits best.\\n(Options are meant to be humorous and should not be taken seriously)\",\n  9: \"Choose the option that fits best.\\n(Options are meant to be humorous and should not be taken seriously)\",\n  10: \"\"\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Header } from \"../Header\";\nimport { Landing } from \"../Landing\";\nimport { FormContainer } from \"../FormContainer\";\nimport { startGame } from \"../../redux/actions\";\nimport { formInstructions } from \"../../lib/instructions\";\nimport \"./panel.css\";\n\nconst Panel = ({ currentForm, inProgress, startGame }) => {\n  const display = inProgress ? <FormContainer /> : <Landing startGame={startGame} />;\n  const panelText = formInstructions[currentForm];\n  const panelTextFormat = currentForm ?\n    <p className=\"instructions\">\n      {\n        panelText.split('\\n').map(line => <p>{line}</p>)\n      }\n    </p> :\n    <p className=\"landing__text\">{panelText}</p>;\n\n  return (\n    <div className=\"app-panel\" data-testid=\"component-Panel\">\n      <div className=\"panel__row panel__row-header\">\n        <Header currentForm={currentForm} />\n      </div>\n      <div className=\"panel__row panel__row-instructions\">\n          { panelTextFormat }\n      </div>\n      <div className=\"panel__row panel__row-content\">{display}</div>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ gameState }) => {\n  const { currentForm, inProgress } = gameState;\n  return { currentForm, inProgress };\n};\n\nexport default connect(mapStateToProps, { startGame })(Panel);\n","import React from \"react\";\nimport \"./polarGrid.css\";\n\nconst PolarGrid = ({ grid, view }) => {\n  // Get the radius from the view width\n  const svgRadius = (view.width * 0.99) / 2;\n  // Set the spacing of each ring\n  const ringSpacing = svgRadius / 50;\n  // Get the line starting x point\n  const xStartPoint = (radian, theta) => parseFloat((grid.cx + ringSpacing * radian * -Math.cos(theta)).toFixed(4));\n  // Get the line starting y point\n  const yStartPoint = (radian, theta) => parseFloat((grid.cy + ringSpacing * radian * Math.sin(theta)).toFixed(4));\n  // Get the line ending x point\n  const xEndPoint = (theta) => parseFloat((grid.cx + svgRadius * -Math.cos(theta)).toFixed(4));\n  // Get the line ending y point\n  const yEndPoint = (theta) => parseFloat((grid.cy + ringSpacing * 50 * Math.sin(theta)).toFixed(4));\n  // Template for the circle path string\n  const circlePathTemplate = (cx, cy, r) => {\n    return `M ${cx} ${cy} m -${r}, 0 a ${r},${r} 0 1,0 ${r * 2},0 a ${r},${r} 0 1,0 -${r * 2},0 `;\n  };\n\n  // Add a center circle for the whole grid\n  let path = circlePathTemplate(grid.cx, grid.cy, 0.5 * ringSpacing);\n\n  // Creates the rings of the polar grid\n  const createRings = () => {\n    let i = ringSpacing * 10;\n    while (i < svgRadius + ringSpacing) {\n      const radius = parseFloat(i.toFixed(4));\n      path = path + circlePathTemplate(grid.cx, grid.cy, radius);\n      i += ringSpacing * 10;\n    }\n  };\n  // Create full lines at 30 degree increments\n  const createFullLines = () => {\n    for (let i = 0; i < 360; i += 30) {\n      const theta = i * (Math.PI / 180);\n      path =\n        path + `M ${xStartPoint(0.5, theta)}, ${yStartPoint(0.5, theta)} L ${xEndPoint(theta)}, ${yEndPoint(theta)} `;\n    }\n  };\n  const createLongLines = () => {\n    for (let i = 0; i < 360; i += 10) {\n      if (i % 30 === 0) {\n        continue;\n      }\n      const theta = i * (Math.PI / 180);\n      path = path + `M ${xStartPoint(5, theta)}, ${yStartPoint(5, theta)} L ${xEndPoint(theta)}, ${yEndPoint(theta)} `;\n    }\n  };\n  const createMediumLines = () => {\n    for (let i = 0; i < 360; i += 2) {\n      if (i % 30 === 0 || i % 10 === 0) {\n        continue;\n      }\n      const theta = i * (Math.PI / 180);\n      path =\n        path + `M ${xStartPoint(15, theta)}, ${yStartPoint(15, theta)} L ${xEndPoint(theta)}, ${yEndPoint(theta)} `;\n    }\n  };\n  const createShortLines = () => {\n    for (let i = 0; i < 360; i += 1) {\n      if (i % 30 === 0 || i % 10 === 0 || i % 2 === 0) {\n        continue;\n      }\n      const theta = i * (Math.PI / 180);\n      path =\n        path + `M ${xStartPoint(35, theta)}, ${yStartPoint(35, theta)} L ${xEndPoint(theta)}, ${yEndPoint(theta)} `;\n    }\n  };\n\n  createRings();\n  createLongLines();\n  createMediumLines();\n  createShortLines();\n  createFullLines();\n\n  return <path className=\"polarGrid\" d={path} />;\n};\n\nexport default PolarGrid;\n","import React from \"react\";\nimport { resizeAllCircles } from \"../../utils\";\n\nconst CircleDisplay = ({ currentForm, playerCircles, resizeRatio, resizeCircles }) => {\n\n   let circles;\n   if (resizeCircles) {\n     circles = resizeAllCircles(playerCircles, resizeRatio) ;\n   } else {\n     circles = playerCircles\n   }\n\n  return currentForm > 2 ? circles.map((circle) => <>{circle}</>) : <></>;\n};\n\nexport default CircleDisplay;\n","/* IMPORTS */\nimport React, {useEffect, useState} from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateGridDisplay, resizePlayerCircles } from \"../../../redux/actions\";\nimport { PolarGrid } from \"../../PolarGrid\";\nimport { CircleDisplay } from \"../../CircleDisplay\";\nimport { Blob } from \"../../Blob\";\n/* ------ */\n\n\n\nconst DisplaySvg = ({ canvasDisplay, session, updateGridDisplay, resizePlayerCircles }) => {\n\n\n  /* Update the canvasDisplay grid based on new view dimensions */\n  useEffect(() => {\n    const asyncGridUpdate = async () => {\n        await updateGridDisplay(canvasDisplay.view, true);\n    }\n    asyncGridUpdate();\n  }, [canvasDisplay.view]);\n\n  return (\n    <svg className=\"svg__canvas\">\n      {session.displayGrid ? <PolarGrid {...canvasDisplay} /> : null}\n      {/*{!session.displayGrid && session.currentForm > 0 ? (*/}\n      {/*  <Blob players={players} canvasDisplay={canvasDisplay} />*/}\n      {/*) : null}*/}\n      {session.currentForm > 2\n        ? <CircleDisplay currentForm={session.currentForm} playerCircles={session.circles} resizeRatio={canvasDisplay.resizeRatio} resizeCircles={session.resizeCircles} resizePlayerCircles={resizePlayerCircles} />\n        : null\n      }\n    </svg>\n  );\n}\n\nexport default connect(null, { updateGridDisplay, resizePlayerCircles })(DisplaySvg);\n","import React, { useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateView } from \"../../redux/actions\";\nimport { debounce } from \"../../utils\";\nimport { DisplaySvg } from \"./components\";\nimport \"./canvas.css\";\n\nconst Canvas = ({ canvasDisplay, session, updateView }) => {\n  const displaySVG = useRef(null);\n\n  /* Sets initial bounds for background grid */\n  useEffect(() => {\n    console.log(displaySVG);\n    const asyncUpdate = async () => {\n      await updateView({\n        height: displaySVG.current.scrollHeight || null,\n        width: displaySVG.current.scrollWidth || null,\n      });\n    };\n    asyncUpdate();\n  }, []);\n\n  /* Debounced handler for catching window resized and changing bounds for background grid */\n  useEffect(() => {\n    const debounceHandleResize = debounce(function () {\n      updateView({\n        height: displaySVG.current.scrollHeight,\n        width: displaySVG.current.scrollWidth,\n      });\n    }, 500);\n    window.addEventListener(\"resize\", debounceHandleResize);\n    return (_) => window.removeEventListener(\"resize\", debounceHandleResize);\n  }, [canvasDisplay.view, updateView]);\n\n  return (\n    <div className=\"svg__container\" ref={displaySVG}>\n      <DisplaySvg session={session} canvasDisplay={canvasDisplay} />\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ gameState }) => {\n  const { canvasDisplay, ...rest } = gameState;\n  return {\n    canvasDisplay,\n    session: rest,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateView,\n})(Canvas);\n","export const debounce = (callback, wait) => {\n  let timeoutID = null;\n  return (...args) => {\n    window.clearTimeout(timeoutID);\n    timeoutID = window.setTimeout(() => {\n      callback.apply(null, args);\n    }, wait);\n  };\n};","import React from \"react\";\nimport { Panel } from \"./components/Panel\";\nimport { Canvas } from \"./components/Canvas\";\n\nexport const App = () => {\n  return (\n    <div className=\"app\" data-testid=\"component-App\">\n      <div className=\"app__display\">\n        <div className=\"app__sidebar\">\n          <Panel />\n        </div>\n        <div className=\"app__canvas\">\n          <Canvas />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import {\n  START_GAME,\n  END_GAME,\n  NEXT_FORM,\n  PREV_FORM,\n  RESET_FORM,\n  NEXT_PLAYER,\n  PREV_PLAYER,\n  UPDATE_CIRCLES,\n  DISPLAY_CIRCLES,\n  DISPLAY_GRID,\n  INITIALIZE_GROUP,\n  UPDATE_PLAYER,\n  INITIALIZE_GAME,\n  UPDATE_DISPLAY_GRID,\n  UPDATE_PLAYER_CIRCLE,\n  UPDATE_VIEW,\n  FINAL_DISPLAY,\n  RESIZE_PLAYER_CIRCLES,\n} from \"../types\";\n\nconst INITIAL_STATE = {\n  _id: \"\",\n  inProgress: false,\n  updateCircles: false,\n  displayGrid: false,\n  complete: false,\n  resizeCircles: false,\n  numPlayers: 0,\n  interest: \"\",\n  currentForm: 0,\n  currentPlayer: 0,\n  players: {},\n  playerIds: [],\n  circles: [],\n  finalCircles: [],\n  centerPoint: {x: 0, y:0},\n  canvasDisplay: {\n    resizeRatio: 1,\n    view: {\n      height: 0,\n      width: 0,\n    },\n    grid: {\n      stage: 0,\n      svgDim: 0,\n      radius: 0,\n      axis: 0,\n      cross: 0,\n      cx: 0,\n      cy: 0,\n      step: 0,\n    },\n  },\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case START_GAME:\n      console.info(action.type, action.payload);\n      return {\n        ...state,\n        ...action.payload,\n      };\n    case END_GAME:\n      console.info(action.type, action.payload);\n      return {\n        ...state,\n        ...INITIAL_STATE,\n      };\n    case INITIALIZE_GAME:\n      console.info(action.type, action.payload);\n      return {\n        ...state,\n        ...action.payload.game,\n        players: {\n          ...state.players,\n          ...action.payload.players /*to change to players*/,\n        },\n      };\n    case NEXT_FORM:\n      console.info(action.type, action.payload);\n      return {\n        ...state,\n        ...action.payload,\n      };\n    case PREV_FORM:\n      console.info(action.type, action.payload);\n      return {\n        ...state,\n        ...action.payload,\n      };\n    case RESET_FORM:\n      console.log(action.type, action.payload);\n      return {\n        ...state,\n        ...action.payload\n      }\n    case NEXT_PLAYER:\n      console.info(action.type, action.payload);\n      return {\n        ...state,\n        ...action.payload,\n      };\n    case PREV_PLAYER:\n      console.info(action.type, action.payload);\n      return {\n        ...state,\n        ...action.payload,\n      };\n    case UPDATE_PLAYER:\n      console.info(action.type, action.payload);\n      return {\n        ...state,\n        circles: [\n          ...state.circles.map((circle, i) => {\n            return i !== action.payload.playerIndex ? circle : action.payload.circleSVG;\n          }),\n        ],\n        players: {\n          ...state.players,\n          [action.payload.playerIndex]: {\n            ...state.players[action.payload.playerIndex],\n            ...action.payload.circles\n          },\n        },\n      };\n    case UPDATE_PLAYER_CIRCLE:\n      console.info(action.type, action.payload);\n      return {\n        ...state,\n        circles: [\n          ...state.circles.map((circle, i) => {\n            return i !== action.payload.currentPlayer ? circle : action.payload.updatedPlayerCircle.circleSVG;\n          }),\n        ],\n        players: {\n          ...state.players,\n          [action.payload.currentPlayer]: {\n            ...state.players[action.payload.currentPlayer],\n            ...action.payload.updatedPlayerCircle,\n          },\n        },\n      };\n    case RESIZE_PLAYER_CIRCLES:\n      console.info(action.type, action.payload);\n      return { ...state };\n    case FINAL_DISPLAY:\n      console.info(action.type, action.payload);\n      return {\n        ...state,\n        displayGrid: action.payload.displayGrid,\n        circles: action.payload.finalCircles,\n      };\n    case UPDATE_DISPLAY_GRID:\n      console.info(action.type, action.payload);\n      return {\n        ...state,\n        resizeCircles: action.payload.resizeCircles,\n        centerPoint: {\n          ...state.centerPoint,\n          x: Math.round(action.payload.grid.cx),\n          y: Math.round(action.payload.grid.cy)\n        },\n        canvasDisplay: {\n          ...state.canvasDisplay,\n          resizeRatio: action.payload.resizeRatio,\n          grid: { ...action.payload.grid },\n        },\n      };\n    case UPDATE_VIEW:\n      console.info(action.type, action.payload);\n      return {\n        ...state,\n        resizeCircles: action.payload.resizeCircles,\n        canvasDisplay: {\n          ...state.canvasDisplay,\n          view: {\n            ...state.canvasDisplay.view,\n            oldHeight: state.canvasDisplay.view.height,\n            oldWidth: state.canvasDisplay.view.width,\n            ...action.payload.view,\n          },\n        },\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { reducer as formReducer } from \"redux-form\";\nimport gameReducer from \"./gameReducer\";\n\nexport default combineReducers({ gameState: gameReducer, form: formReducer });\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport reduxThunk from \"redux-thunk\";\nimport reducers from \"./redux/reducers\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport const store = createStore(reducers, composeEnhancers(applyMiddleware(reduxThunk)));\n","import \"./root.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { App } from \"./App\";\nimport { store } from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n","import React from \"react\";\nimport { Field } from \"formik\";\n\nexport const FormOne = () => {\n  return (\n    <>\n      <div className=\"form__row\">\n        <label className=\"item__label item__label-select\">Height</label>\n        <Field className=\"form__control form__control-select\" name=\"height\" id=\"formHeight\" as=\"select\">\n          <option value=\"DEFAULT\">Choose...</option>\n          <option value={16}>Tall</option>\n          <option value={32}>Average</option>\n          <option value={48}>Short</option>\n        </Field>\n      </div>\n      <div className=\"form__row\">\n        <label className=\"item__label item__label-select\">Interest</label>\n        <Field className=\"form__control form__control-select\" name=\"interest\" id=\"formInterest\" as=\"select\">\n          <option value=\"DEFAULT\">Choose...</option>\n          <option value={27}>Numbers</option>\n          <option value={36}>Words</option>\n          <option value={18}>Ideas</option>\n          <option value={9}>Images</option>\n          <option value={0}>People</option>\n        </Field>\n      </div>\n      <div className=\"form__row\">\n        <label className=\"item__label item__label-select\">Gender</label>\n        <Field className=\"form__control form__control-select\" name=\"gender\" id=\"formGender\" as=\"select\">\n          <option value=\"DEFAULT\">Choose...</option>\n          <option value={2}>Male</option>\n          <option value={1}>Female</option>\n          <option value={0}>Non Binary</option>\n        </Field>\n      </div>\n      <div className=\"form__row\">\n        <label className=\"item__label item__label-select\">Age</label>\n        <Field className=\"form__control form__control-select\" name=\"age\" id=\"formAge\" as=\"select\">\n          <option value=\"DEFAULT\">Choose...</option>\n          <option value={400}>0-10</option>\n          <option value={40}>11-20</option>\n          <option value={360}>21-30</option>\n          <option value={80}>31-40</option>\n          <option value={320}>41-50</option>\n          <option value={120}>51-60</option>\n          <option value={280}>61-70</option>\n          <option value={160}>71-80</option>\n          <option value={240}>81-90</option>\n          <option value={200}>91-100</option>\n        </Field>\n      </div>\n      <div className=\"form__row\">\n        <label className=\"item__label item__label-select\">Diet</label>\n        <Field className=\"form__control form__control-select\" name=\"diet\" id=\"formDiet\" as=\"select\">\n          <option value=\"DEFAULT\">Choose...</option>\n          <option value=\"omnivore\">Omnivore</option>\n          <option value=\"vegetarian\">Vegetarian</option>\n          <option value=\"pescatarian\">Pescatarian</option>\n          <option value=\"vegan\">Vegan</option>\n        </Field>\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nimport { Field } from \"formik\";\n\nexport const FormTwo = () => {\n  return (\n    <>\n      <div className=\"form__row\">\n        <label className=\"item__label item__label-select\">Time</label>\n        <Field className=\"form__control form__control-select\" name=\"time\" id=\"formTemporal\" as=\"select\">\n          <option value=\"DEFAULT\">Choose...</option>\n          <option value={18}>Morning</option>\n          <option value={45}>Evening</option>\n        </Field>\n      </div>\n      <div className=\"form__row\">\n        <label className=\"item__label item__label-select\">Personality</label>\n        <Field\n          className=\"form__control form__control-select\"\n          name=\"personality\"\n          id=\"formPersonality\"\n          as=\"select\"\n        >\n          <option value=\"DEFAULT\">Choose...</option>\n          <option value={60}>Introvert</option>\n          <option value={31}>Extrovert</option>\n        </Field>\n      </div>\n      <div className=\"form__row\">\n        <label className=\"item__label item__label-select\">Hair</label>\n        <Field className=\"form__control form__control-select\" name=\"hair\" id=\"formHair\" as=\"select\">\n          <option value=\"DEFAULT\">Choose...</option>\n          <option value={10}>Curly</option>\n          <option value={18}>Straight</option>\n          <option value={25}>Wavy</option>\n        </Field>\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nimport { Field } from \"formik\";\n\nexport const FormThree = () => {\n  return (\n    <>\n      <div className=\"form__row\">\n        <label className=\"item__label item__label-select\">Relationship to Money</label>\n        <Field className=\"form__control form__control-select\" name=\"money\" id=\"formMoney\" as=\"select\">\n          <option value=\"DEFAULT\">Choose...</option>\n          <option value={0}>Miserly</option>\n          <option value={2}>Spend-thrift</option>\n          <option value={1}>What's mine is yours</option>\n          <option value={3}>Frugal</option>\n        </Field>\n      </div>\n      <div className=\"form__row\">\n        <label className=\"item__label item__label-select\">Relationship to Food</label>\n        <Field className=\"form__control form__control-select\" name=\"food\" id=\"formFood\" as=\"select\">\n          <option value=\"DEFAULT\">Choose...</option>\n          <option value={45}>I will try anything</option>\n          <option value={135}>A foodie</option>\n          <option value={45}>See it, Eat it</option>\n          <option value={270}>A picky eater</option>\n        </Field>\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nimport { Field } from \"formik\";\n\nexport const FormFour = () => {\n  return (\n    <>\n      <div className=\"form__row\">\n        <label className=\"item__label item__label-select\">Relationship to Nature</label>\n        <Field className=\"form__control form__control-select\" name=\"nature\" id=\"formNature\" as=\"select\">\n          <option value=\"DEFAULT\">Choose...</option>\n          <option value=\"hollow\">Video Gamer</option>\n          <option value=\"stroke\">Happy on the porch</option>\n          <option value=\"ring\">Nature Lover</option>\n          <option value=\"dot\">Climate activist</option>\n        </Field>\n      </div>\n      <div className=\"form__row\">\n        <label className=\"item__label item__label-select\">Relationship to Social Media</label>\n        <Field className=\"form__control form__control-select\" name=\"media\" id=\"formMedia\" as=\"select\">\n          <option value=\"DEFAULT\">Choose...</option>\n          <option value=\"thinner\">What is social media</option>\n          <option value=\"thicker\">Lurker</option>\n          <option value=\"thin\">Regular poster</option>\n          <option value=\"thick\">Influencer</option>\n        </Field>\n      </div>\n      <div className=\"form__row\">\n        <label className=\"item__label item__label-select\">Relationship to Progress</label>\n        <Field className=\"form__control form__control-select\" name=\"progress\" id=\"formProgress\" as=\"select\">\n          <option value=\"DEFAULT\">Choose...</option>\n          <option value=\"complimentary\">Curmudgeon</option>\n          <option value=\"triadic\">C'est Le Vie</option>\n          <option value=\"monochromatic\">Reluctant Participant</option>\n          <option value=\"analogous\">Activist</option>\n        </Field>\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nimport { Field } from \"formik\";;\n\nexport const FormFive = () => {\n  return (\n    <>\n      <div className=\"form__row\">\n        <label className=\"item__label item__label-select\">Relationship to Religion</label>\n        <Field className=\"form__control form__control-select\" name=\"religion\" id=\"formReligion\" as=\"select\">\n          <option value=\"DEFAULT\">Choose...</option>\n          <option value=\"solid\">Practitioner</option>\n          <option value=\"round\">Agnostic</option>\n          <option value=\"dotted\">God-fearing</option>\n          <option value=\"uneven\">Wiccin</option>\n          <option value=\"dashed\">Undecided</option>\n        </Field>\n      </div>\n      <div className=\"form__row\">\n        <label className=\"item__label item__label-select\">Relationship to Culture</label>\n        <Field className=\"form__control form__control-select\" name=\"culture\" id=\"formCulture\" as=\"select\">\n          <option value=\"DEFAULT\">Choose...</option>\n          <option value={1}>People Magazine reader</option>\n          <option value={2}>Netflix binger</option>\n          <option value={3}>Museum attendee</option>\n          <option value={4}>Cultural practitioner</option>\n        </Field>\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nimport { Field } from \"formik\";;\n\nexport const FormSix = () => {\n  return (\n    <>\n      <div className=\"form__row\">\n        <label className=\"item__label item__label-select\">Choose a Color</label>\n        <Field className=\"form__control form__control-select\" name=\"color\" id=\"formColor\" as=\"select\">\n          <option value=\"DEFAULT\">Choose...</option>\n          <option value=\"chartreuse\">Chartreuse</option>\n          <option value=\"vermilion\">Vermilion</option>\n          <option value=\"cobalt\">Cobalt</option>\n          <option value=\"teal\">Teal</option>\n          <option value=\"kellyGreen\">Kelly Green</option>\n          <option value=\"aubergine\">Aubergine</option>\n        </Field>\n      </div>\n    </>\n  );\n};\n","const required = (value) => (value || typeof value === \"number\" ? undefined : \"Required\");\nconst maxValue = (value) => (value && value > 120 ? \"Are you really over 120 years old?!\" : undefined);\nconst minValue = (value) => (value && value > 0 ? undefined : \"Numbers need to be greater than 0 :)\");\nconst number = (value) => (value && isNaN(Number(value)) ? \"Must be a number\" : undefined);\nconst maxLength = (value) =>\n  value && value.length > 15 ? \"Unfortunately names must be under 15 characters long\" : undefined;\n\nexport const validateNumber = (value) => {\n  return required(value) || number(value) || maxValue(value) || minValue(value);\n}\n\nexport const validateString = (value) => {\n  return required(value) || maxLength(value)\n}","import React from \"react\";\nimport {Field, FieldArray, Formik, Form } from \"formik\";\nimport {  validateString, validateNumber } from \"../../utils/validators\";\n\n// Create the inputs for each player field\nconst renderField = ({ index, field, form, label, placeholder, ...props }) => {\n  return (\n    <>\n        <label className=\"item__label\">{label}</label>\n        <input\n          {...field}\n          {...props}\n          placeholder={placeholder || label + \"...\"}\n        />\n    </>\n  );\n};\n\nexport const PlayerForm = ({ values, ...formProps }) => {\n  return (\n<>\n      <div className=\"form__row\">\n        <div className=\"form__item form__item-interest\">\n          <label className=\"item__label item__label-interest\">Common Interest</label>\n          <Field\n            className={`form__control form__control-input ${1 === 2 ? \"form__control-invalid\" : \"\"}`}\n            id=\"commonInterest\"\n            name=\"interest\"\n            component=\"input\"\n            type=\"text\"\n            placeholder=\"Common interest...\"\n            validate={validateString}\n          />\n        </div>\n      </div>\n      <FieldArray\n        name=\"players\"\n        render={arrayHelpers => (\n          <>\n            {\n              values.players.map((player, index) => (\n                <div key={`player_${index}`} className=\"form__row\">\n                  <div className=\"form__item\">\n                    <div className=\"item__name\">Player #{index + 1}</div>\n                    <button className=\"item__removeCTA\" type=\"button\" title=\"Remove Player\"\n                            onClick={() => arrayHelpers.remove(index)}>\n                      Remove\n                    </button>\n                  </div>\n                  <div className=\"form__item\">\n                    <Field\n                      className={`form__control form__control-input ${1 === 2 ? \"form__control-invalid\" : \"\"}`}\n                      name={`players.${index}.name`}\n                      type=\"text\"\n                      component={renderField}\n                      label=\"Name\"\n                      validate={validateString}\n                      index={index}\n                    />\n                  </div>\n                  <div className=\"form__item\">\n                    <Field\n                      className={`form__control form__control-input ${1 === 2 ? \"form__control-invalid\" : \"\"}`}\n                      name={`players.${index}.association`}\n                      type=\"text\"\n                      component={renderField}\n                      label={\"Association\"}\n                      validate={validateNumber}\n                    />\n                  </div>\n                </div>\n\n              ))\n            }\n            <div className={`form__row ${values.players.length === 5 ? 'invisible' : ''}`}>\n              <div className=\"form__item form__item-addCTA\">\n                <button className=\"p-button p-button__add\" type=\"button\" onClick={() => arrayHelpers.push({name: '', association: ''})}>\n                  Add Player\n                </button>\n              </div>\n            </div>\n          </>\n        )}\n      />\n    </>\n)\n};"],"sourceRoot":""}